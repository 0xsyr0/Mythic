syntax = "proto3";
option go_package = "github.com/its-a-feature/Mythic/grpc/services";
package pushC2Services;


service PushC2 {
  // rpc function(messageFromClient) messageToClient
  rpc StartPushC2Streaming (stream PushC2MessageFromAgent) returns (stream PushC2MessageFromMythic) {}
  rpc StartPushC2StreamingOneToMany (stream PushC2MessageFromAgent) returns (stream PushC2MessageFromMythic) {}
}

// agent sends along the base64 message like normal and c2 profile adds in c2 profile name
// this is all normal c2 profiles pass along to mythic anyway
// C2ProfileName is required
// AgentUUID is required if Message is used (so your agent is base64 encoding all messages
// TaskingSize is also handy if it's known by the C2 Profile, otherwise fine to leave blank and -1 will be used
// If M
message PushC2MessageFromAgent {
  string C2ProfileName = 1;
  string RemoteIP      = 2;
  int32 TaskingSize    = 3;
  bytes  Message       = 4;
  bytes Base64Message  = 5;
}

// mythic sends along success/error information if any
// mythic sends along the messages
message PushC2MessageFromMythic  {
bool   Success  = 1;
string Error    = 2;
bytes  Message  = 3;
}