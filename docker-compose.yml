version: "2.4"
services:
        postgres:
                build: ./postgres-docker
                container_name: mythic_postgres
                command: postgres -c "max_connections=400"
                volumes:
                 - ./postgres-docker/database:/var/lib/postgresql/data
                labels:
                        NAME: "mythic_postgres"
                restart: on-failure
                logging:
                        driver: "json-file"
                        options:
                                max-file: "1"
                                max-size: "10m"
                environment:
                        POSTGRES_DB: "${POSTGRES_DB}"
                        POSTGRES_USER: "${POSTGRES_USER}"
                        POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
                ports:
                        - "${POSTGRES_PORT}:5432"
        rabbitmq:
                build: ./rabbitmq-docker
                container_name: mythic_rabbitmq
                volumes:
                 - ./rabbitmq-docker/storage:/var/lib/rabbitmq
                logging:
                        driver: "json-file"
                        options:
                                max-file: "1"
                                max-size: "10m"
                labels:
                        NAME: "mythic_rabbitmq"
                environment:
                        RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
                        RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD}"
                        RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_VHOST}"
                restart: on-failure
                ports:
                        - "${RABBITMQ_PORT}:5672"
        server:
                build: ./mythic-docker
                network_mode: host
                container_name: mythic_server
                logging:
                        driver: "json-file"
                        options:
                                max-file: "1"
                                max-size: "10m"
                volumes:
                 - ./mythic-docker:/Mythic
                labels:
                        NAME: "mythic_server"
                environment:
                        - MYTHIC_POSTGRES_HOST=${POSTGRES_HOST}
                        - MYTHIC_POSTGRES_PORT=${POSTGRES_PORT}
                        - MYTHIC_POSTGRES_DB=${POSTGRES_DB}
                        - MYTHIC_POSTGRES_USER=${POSTGRES_USER}
                        - MYTHIC_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
                        - MYTHIC_RABBITMQ_HOST=${RABBITMQ_HOST}
                        - MYTHIC_RABBITMQ_PORT=${RABBITMQ_PORT}
                        - MYTHIC_RABBITMQ_USER=${RABBITMQ_USER}
                        - MYTHIC_RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
                        - MYTHIC_RABBITMQ_VHOST=${RABBITMQ_VHOST}
                        - MYTHIC_JWT_SECRET=${JWT_SECRET}
                        - MYTHIC_REDIS_PORT=${REDIS_PORT}
                        - MYTHIC_DEBUG
                restart: on-failure
                command: ["/bin/bash", "/Mythic/start_mythic_server.sh"]
        redis:
                build: ./redis-docker
                logging:
                        driver: "json-file"
                        options:
                                max-file: "1"
                                max-size: "10m"
                labels:
                        NAME: "mythic_redis"
                container_name: mythic_redis
                restart: always
                ports:
                        - "${REDIS_PORT}:6379"
        graphql:
                build: ./hasura-docker
                volumes:
                        - ./hasura-docker/metadata:/metadata
                network_mode: host
                logging:
                        driver: "json-file"
                        options:
                                max-file: "1"
                                max-size: "10m"
                depends_on:
                        - "postgres"
                labels:
                        NAME: "mythic_graphql"
                container_name: mythic_graphql
                restart: always
                environment:
                        HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
                        HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
                        ## enable the console served by server
                        HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
                        ## enable debugging mode. It is recommended to disable this in production
                        HASURA_GRAPHQL_DEV_MODE: "true"
                        ## uncomment next line to set an admin secret
                        HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_SECRET}
                        HASURA_GRAPHQL_INSECURE_SKIP_TLS_VERIFY: "true"
                        HASURA_GRAPHQL_SERVER_PORT: ${HASURA_PORT}
                        HASURA_GRAPHQL_METADATA_DIR: /metadata
                        HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_REFETCH_INTERVAL: 500
                        HASURA_GRAPHQL_AUTH_HOOK: http://${MYTHIC_SERVER_HOST}:${MYTHIC_SERVER_PORT}/graphql/webhook
                        MYTHIC_ACTIONS_URL_BASE: http://${MYTHIC_SERVER_HOST}:${MYTHIC_SERVER_PORT}/api/v1.4
        nginx:
                build: ./nginx-docker
                network_mode: host
                labels:
                        NAME: "mythic_nginx"
                container_name: mythic_nginx
                logging:
                        driver: "json-file"
                        options:
                                max-file: "1"
                                max-size: "10m"
                restart: always
                volumes:
                        - ./nginx-docker/ssl:/etc/ssl/private
                        - ./nginx-docker/config:/etc/nginx
                environment:
                        DOCUMENTATION_HOST: ${DOCUMENTATION_HOST}
                        DOCUMENTATION_PORT: ${DOCUMENTATION_PORT}
                        NGINX_PORT: ${NGINX_PORT}
                        MYTHIC_SERVER_HOST: ${MYTHIC_SERVER_HOST}
                        MYTHIC_SERVER_PORT: ${MYTHIC_SERVER_PORT}
                        HASURA_HOST: ${HASURA_HOST}
                        HASURA_PORT: ${HASURA_PORT}
                        NEW_UI_HOST: ${MYTHIC_SERVER_HOST}
                        NEW_UI_PORT: 3000
        react:
                build: ./mythic-react-docker
                network_mode: host
                labels:
                        NAME: "mythic_react"
                container_name: mythic_react
                logging:
                        driver: "json-file"
                        options:
                                max-file: "1"
                                max-size: "10m"
                restart: always
                volumes:
                        - ./mythic-react-docker/mythic:/mythic_react

