{"version":3,"sources":["components/MythicComponents/MythicTextField.js","assets/mythic.svg","cache.js","components/pages/Login/LoginForm.js","components/pages/Settings/SettingsOperatorAPIToken.js","components/pages/Settings/SettingsOperatorDialog.js","components/pages/Settings/SettingsOperatorDeleteDialog.js","components/MythicComponents/MythicDialog.js","components/utilities/Time.js","components/pages/Settings/SettingsOperator.js","components/pages/Settings/SettingsOperatorTable.js","components/pages/Settings/Settings.js","components/pages/Logout/Logout.js","components/pages/PayloadTypes/PayloadTypeBuildDialog.js","components/pages/PayloadTypes/PayloadTypeCard.js","components/pages/PayloadTypes/PayloadTypes.js","components/pages/CreatePayload/CreatePayloadNavigationButtons.js","components/pages/CreatePayload/Step1SelectOS.js","components/pages/CreatePayload/CreatePayloadParameter.js","components/pages/CreatePayload/CreatePayloadBuildParametersTable.js","components/pages/CreatePayload/Step2SelectPayloadType.js","components/pages/CreatePayload/Step3SelectCommands.js","components/pages/CreatePayload/CreatePayloadC2ProfileParametersTable.js","components/pages/CreatePayload/Step4C2Profiles.js","components/pages/CreatePayload/PayloadSubscriptionNotification.js","components/pages/CreatePayload/Step5Build.js","components/pages/CreatePayload/CreatePayload.js","components/pages/EventFeed/EventFeedTableEvents.js","components/pages/EventFeed/EventFeedTable.js","components/pages/EventFeed/EventFeed.js","components/pages/Payloads/DetailedPayloadTable.js","components/pages/Payloads/PayloadsTableRow.js","components/pages/Payloads/PayloadsTable.js","components/pages/Payloads/Payloads.js","components/pages/Home/QuickStartCard.js","components/pages/Home/Home.js","components/utilities/LoggedInRoute.js","components/pages/C2Profiles/C2ProfileBuildDialog.js","components/pages/C2Profiles/C2ProfileOutputDialog.js","components/pages/C2Profiles/C2ProfileConfigDialog.js","components/pages/C2Profiles/C2ProfileStartStopOutputDialog.js","components/pages/C2Profiles/C2ProfilesCard.js","components/pages/C2Profiles/C2Profiles.js","components/MythicComponents/MythicTable.js","components/pages/Callbacks/C2PathDialog.js","components/pages/Callbacks/CallbacksTableRow.js","components/pages/Callbacks/CallbacksTable.js","components/MythicComponents/MythicTabPanel.js","components/pages/Callbacks/ResponseDisplay.js","components/pages/Callbacks/TaskCommentDialog.js","components/pages/Callbacks/TaskDisplay.js","components/utilities/Clipboard.js","components/pages/Callbacks/TaskParametersDialogRow.js","components/pages/Callbacks/TaskParametersDialog.js","components/pages/Callbacks/CallbacksTabsTasking.js","components/pages/Callbacks/CallbacksTabs.js","components/pages/Callbacks/HeightsDialog.js","components/pages/Callbacks/Callbacks.js","components/TopAppBarNotifications.js","components/EventFeedNotifications.js","components/TopAppBar.js","themes/GlobalStyles.js","themes/Themes.js","components/pages/SingleTaskView/SingleTaskView.js","components/App.js","components/utilities/useDarkMode.js","components/utilities/HTTPPost.js","index.js"],"names":["ValidationTextField","withStyles","root","borderColor","borderWidth","borderLeftWidth","padding","TextField","MythicTextField","onChange","evt","name","props","value","target","error","validate","checkError","style","width","this","fullWidth","placeholder","label","variant","required","requiredValue","InputLabelProps","inputLabelProps","multiline","type","undefined","InputProps","helperText","errorText","marginBottom","React","Component","meState","makeVar","menuOpen","localStorage","getItem","loggedIn","access_token","refresh_token","user","JSON","parse","LoginForm","me","useReactiveVar","enqueueSnackbar","useSnackbar","useState","username","setUsername","password","setPassword","submit","e","preventDefault","requestOptions","method","headers","body","stringify","fetch","then","response","json","data","setItem","successfulLogin","autoHideDuration","console","log","catch","toString","justifyContent","display","to","locationState","location","state","from","pathname","redirectPath","src","logo","height","alt","onSubmit","Button","color","onClick","marginRight","APITokenRow","TableRow","TableCell","startIcon","Switch","checked","active","id","onChanged","inputProps","token_type","token_value","SettingsOperatorDialog","passwordOld","setPasswordOld","passwordNew","setPasswordNew","Fragment","DialogTitle","title","DialogContent","dividers","DialogContentText","autoFocus","margin","DialogActions","handleClose","onAccept","SettingsOperatorDeleteDialog","MythicDialog","descriptionElementRef","useRef","useEffect","open","descriptionElement","current","focus","Dialog","onClose","scroll","maxWidth","aria-labelledby","aria-describedby","innerDialog","toLocalTime","date","view_utc_time","init_date","Date","toDateString","toTimeString","substring","SettingsOperator","setOpen","openUpdate","setOpenUpdateDialog","openDelete","setOpenDeleteDialog","apitokenOnChanged","size","onDeleteOperator","onViewUTCChanged","onActiveChanged","last_login","creation_time","admin","onAdminChanged","IconButton","aria-label","className","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","Typography","gutterBottom","component","float","Table","TableHead","TableBody","apitokens","map","token","key","SettingsOperatorTable","openNew","setOpenNewDialog","TableContainer","Paper","align","length","onNewOperator","operator","op","GET_Operator","gql","operatorsUpdateViewUTCTime","operatorsUpdateAdmin","operatorsUpdateActive","operatorsDelete","newOperatorMutation","Settings","useQuery","loading","useMutation","update","cache","update_operator","returning","updateUTC","existingOperators","readQuery","query","removedOperator","newFinalOperators","filter","writeQuery","deleteOperator","updateAdmin","updateActive","createOperator","status","newOperator","LinearProgress","marginTop","variables","Logout","accessToken","refreshToken","removeItem","GET_Payload_Details","PayloadTypeBuildDialog","buildParams","setBuildParams","payload_name","onCompleted","payloadtype","buildparameters","param","description","parameter_type","parameter","verifier_regex","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","running","backgroundColor","notrunning","StyledAvatar","badge","boxShadow","position","top","left","borderRadius","animation","border","content","opacity","Badge","PayloadTypeCard","classes","openBuildingDialog","setOpenBuildingDialog","getTime","getTimezoneOffset","last_heartbeat","Card","elevation","overlap","invisible","anchorOrigin","vertical","horizontal","CardMedia","media","ptype","textAlign","CardContent","author","supported_os","note","CardActions","href","SUB_Payload_Types","PayloadTypes","useSubscription","maxHeight","pt","CreatePayloadNavigationButtons","disabled","first","canceled","finished","last","GET_Payload_Types","Step1SelectOS","os","setOS","CircularProgress","FormControl","Select","native","sortedOptions","reduce","currentOptions","adds","split","prev","includes","sort","getOSOptions","opt","FormHelperText","CreatePayloadParameter","setValue","getParamChooseOptions","default_value","options","onChangeValue","onChangeText","testParameterValues","curVal","RegExp","test","i","getParameterObject","CreatePayloadBuildParametersTable","buildParameters","Step2SelectPayloadType","selectedPayloadType","setSelectedPayloadType","payloadTypeParameters","setSelectedPayloadTypeParameters","buildOptions","payloadtypedata","payload","newParams","finishedParams","Step3SelectCommands","commands","setCommands","payloadType","multiple","event","l","selected","push","command","cmd","CreatePayloadC2ProfileParametersTable","paramName","c2profileparameters","Step4C2Profiles","c2Profiles","setC2Profiles","profiles","c2profile","c2","parameters","updateC2Parameter","c2Name","parameterName","updatedc2","curC2","c2params","FormControlLabel","control","curc2","toggleC2Selection","labelPlacement","allValid","forEach","subscribe_payloads","breakpoints","up","minWidth","typography","fontWeight","actionRoot","icons","collapse","checkIcon","fontSize","paddingRight","button","textTransform","SnackMessage","forwardRef","ref","useContext","ThemeContext","closeSnackbar","expanded","setExpanded","successColor","clsx","download","window","origin","file_id","PayloadSubscriptionNotification","fromNow","setFromNow","badActions","toISOString","build_phase","build_message","persist","filemetum","agent_file_id","uuid","action","create_payload","Step5Build","createPayload","createPayloadMutation","finishedPayload","CreatePayload","setPayload","activeStep","setActiveStep","handleStepData","stepData","handleNext","cancelStep","handleBack","steps","prevActiveStep","Stepper","alternativeLabel","index","Step","StepLabel","step","getStepContent","palette","background","paper","inline","EventFeedTableEvents","anchorEl","setAnchorEl","getErrorState","level","resolved","getResolvedState","onUpdateResolution","ListItem","alignItems","errorColor","ListItemAvatar","Avatar","ListItemText","primary","timestamp","secondary","message","ListItemSecondaryAction","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","MenuItem","onUpdateLevel","onUpdateDeleted","EventFeedTable","messagesEndRef","setMessage","onSubmitMessage","scrollIntoView","subscribeToMoreMessages","behavior","operationeventlog","List","overflow","dense","bottom","endAdornment","GET_Event_Feed","Create_Operational_Event_Log","Update_Resolution","Update_Level","Update_Deleted","SUB_Event_Feed","EventFeed","operation_id","current_operation_id","subscribeToMore","newOperationEventLog","updateResolution","updateLevel","existingMessages","removedMessage","update_operationeventlog","newFinalMessages","updateDeleted","operator_id","document","updateQuery","subscriptionData","find","Object","assign","DetailedPayloadTable","setBuildParameters","payload_id","commandState","payloadcommands","c","mythic","version","a","b","buildParametersState","buildparameterinstances","buildparameter","c2profileparametersinstances","cur","c2profileparameter","c2ProfilesState","keys","c2_profile","filename","sha1","md5","j","PayloadsTableRow","callback_alert","onAlertChanged","thickness","tag","PayloadsTable","onDeletePayload","onUpdateCallbackAlert","GET_Payloads","payloadsDelete","payloadsCallbackAlert","Payloads","existing","removed","newFinal","deletePayload","callbackAlert","avatar","red","QuickStartCard","CardHeader","subheader","disableSpacing","aria-expanded","paragraph","Home","LoggedInRoute","rest","render","createElement","GET_C2_Details","C2ProfileBuildDialog","randomize","format_string","getProfileOutputQuery","C2ProfileOutputDialog","profile_id","fetchPolicy","getProfileOutput","output","getProfileConfigQuery","C2ProfileConfigDialog","config","setConfig","downloadContainerFile","atob","onConfigSubmit","btoa","C2ProfileStartStopOutputDialog","startStopProfileMutation","setProfileConfigMutation","C2ProfilesCard","dropdownOpen","setDropdownOpen","dropdownAnchorRef","handleDropdownClose","contains","onError","setOutput","startStopProfile","setOpenProfileStartStopDialog","onStartStopProfile","openProfileDialog","setOpenProfileDialog","openProfileConfigDialog","setOpenProfileConfigDialog","openProfileStartStopDialog","uploadContainerFile","configSubmit","is_p2p","payloadtypec2profiles","translation_container","toLowerCase","ButtonGroup","prevOpen","file_path","Popper","role","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","SUB_C2_Profiles","C2Profiles","descendingComparator","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","EnhancedTableHead","onSelectAllClick","numSelected","onRequestSort","Checkbox","indeterminate","rowCount","headCells","headCell","disablePadding","sortDirection","TableSortLabel","direction","property","visuallyHidden","EnhancedTableRow","labelId","hover","handleClick","aria-checked","isItemSelected","tabIndex","children","C2PathDialog","dagreRef","drawC2PathElements","callbackgraphedges","agent_callback_id","connected","connectedArrow","edges","g","dagreD3","graphlib","Graph","compound","setGraph","rankdir","setDefaultEdgeLabel","edge","destination","source","setNode","end_timestamp","setEdge","arrowheadStyle","svg","d3","svgGroup","append","xCenterOffset","attr","graph","CallbacksTableRow","displayTime","setDisplayTime","openC2Dialog","setOpenC2Dialog","updateTime","curTime","checkin_time","millisec","seconds","Math","trunc","minutes","hours","days","getTimeDifference","callback","delay","savedCallback","setInterval","clearInterval","useInterval","last_checkin","locked","tabType","stopPropagation","onOpenTab","tabID","callbackID","ip","host","domain","architecture","pid","useToolbarStyles","paddingLeft","spacing","highlight","main","lighten","light","text","dark","flex","EnhancedTableToolbar","Toolbar","Tooltip","table","clip","CallbacksTable","setOrder","setOrderBy","setSelected","selectedIndex","indexOf","newSelected","concat","slice","isSelected","topHeight","callbacks","numeric","newSelecteds","n","cal","MythicTabPanel","other","tabInfo","hidden","MythicTabLabel","onCloseTab","selectionFollowsFocus","textColor","indicator","Tab","a11yProps","hex2a","hexx","hex","str","String","fromCharCode","parseInt","substr","getResponsesQuery","ResponseDisplay","task_id","updateCommentMutation","getCommentQuery","TaskCommentDialog","comment","setComment","task_by_pk","updateComment","commentOperator_id","heading","pxToRem","secondaryHeading","icon","verticalAlign","details","column","helper","borderLeft","divider","link","textDecoration","TaskDisplay","displayComment","setDisplayComment","alertBadges","setAlertBadges","openCommentDialog","setOpenCommentDialog","prevResponses","task","responses","Accordion","newExpanded","AccordionSummary","expandIcon","commentOperator","badgeContent","completed","original_params","AccordionDetails","Divider","AccordionActions","setAttribute","appendChild","select","execCommand","removeChild","copyStringToClipboard","TaskParametersDialogRow","fileValue","setFileValue","onSwitchChange","onFileChange","files","file","TaskParametersDialog","setParameters","params","commandparameters","choices","devault_value","help_cmd","needs_admin","CallbacksTabsTaskingLabel","GetLoadedCommandsQuery","createTaskingMutation","getTaskingQuery","getTaskingSubscription","CallbacksTabsTaskingPanel","highlighted","setHighlighted","autocompleteOptions","setAutocompleteOptions","openParametersDialog","setOpenParametersDialog","commandInfo","setCommandInfo","createTask","callback_id","cmds","loadedcommands","localeCompare","useLazyQuery","subscribeToMoreTasks","err","getTasking","taskingLoading","taskingData","onSubmitCommandLine","commandParams","com","trim","onCreateTask","handleAutocompleteChange","innerText","option","onKeyDown","code","deDup","Autocomplete","freeSolo","autoComplete","autoHighlight","disableClearable","disableListWrap","inputValue","onHighlightChange","reason","renderInput","CallbacksTabs","AppBar","Tabs","newValue","indicatorColor","scrollButtons","openTabs","tab","tabHeight","HeightsDialog","heights","setHeights","newHeights","SUB_Callbacks","flexGrow","speedDial","right","Callbacks","setOpenTabs","openHeightsDialog","setOpenHeightsDialog","actions","found","tabs","tabSet","SpeedDial","ariaLabel","SpeedDialIcon","onOpen","FabProps","SpeedDialAction","tooltipTitle","SUB_Event_Logs","TopAppBarNotifications","Link","operationeventlog_aggregate","aggregate","count","EventFeedNotifications","operationaleventlog","drawerWidth","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","mythicElement","TopAppBar","useTheme","settingsRef","isOpen","menuButton","nodeRef","getContentAnchorEl","Drawer","anchor","ListItemIcon","toggleTheme","GlobalStyles","createGlobalStyle","textDarker","listItemBackground","tableHeader","taskAccordian","taskAccordianResponse","taskAccordianBottom","secondaryTextColor","tabHeaderBackground","tabHeaderText","topAppBar","primaryButtonTextOnly","secondaryButtonTextOnly","menuItemBackground","lightTheme","textLighter","toggleBorder","darkTheme","getTaskQuery","SingleTaskView","taskId","useParams","completedData","contentShift","App","setTheme","mountedComponent","setMountedComponent","setMode","mode","localTheme","useDarkMode","themeMode","themeToggler","maxSnack","exact","path","HTTPPost","url","InMemoryCache","typePolicies","Query","fields","merge","incoming","retryLink","RetryLink","initial","max","jitter","attempts","retryIf","_operation","httpLink","HttpLink","uri","reconnect","connectionParams","Authorization","authLink","setContext","_","authorization","errorLink","graphQLErrors","networkError","operation","forward","extensions","oldHeaders","getContext","GetNewToken","reload","successfulRefresh","websocketLink","WebSocketLink","protocol","splitLink","definition","getMainDefinition","kind","apolloClient","ApolloClient","ReactDOM","StrictMode","client","getElementById"],"mappings":"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","file":"static/js/main.c1d2570a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {TextField} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nconst ValidationTextField = withStyles({\n      root: {\n        '& input:valid + fieldset': {\n          borderColor: 'grey',\n          borderWidth: 1,\n        },\n        '& input:invalid + fieldset': {\n          borderColor: 'red',\n          borderWidth: 2,\n        },\n        '& input:valid:focus + fieldset': {\n          borderLeftWidth: 6,\n          padding: '4px !important', // override inline-style\n        },\n      },\n    })(TextField);\n\nclass MythicTextField extends React.Component {\n    \n    static propTypes = {\n        placeholder: PropTypes.string,\n        name: PropTypes.string,\n        validate: PropTypes.func,\n        width: PropTypes.number,\n        onChange: PropTypes.func.isRequired,\n        requiredValue: PropTypes.bool,\n        type: PropTypes.string\n    }\n    onChange = evt => {\n        const name = this.props.name;\n        const value = evt.target.value;\n        const error = this.props.validate ? this.props.validate(value) : false;\n        this.props.onChange(name, value, error);\n    }\n    checkError = () => {\n        return this.props.validate ? this.props.validate(this.props.value) : false\n    }\n    render(){\n        return (\n            <div style={{width:  this.props.width ? this.props.width + \"rem\" : \"100%\"}}>\n                <ValidationTextField \n                    fullWidth={true} \n                    placeholder={this.props.placeholder} \n                    value={this.props.value} \n                    onChange={this.onChange} \n                    label={this.props.name} \n                    variant=\"outlined\" \n                    required={this.props.requiredValue ? this.props.requiredValue : false} \n                    InputLabelProps={this.props.inputLabelProps}\n                    multiline={this.props.multiline ? this.props.multiline : false}\n                    error={this.checkError()} \n                    type={this.props.type === undefined ? \"text\" : this.props.type}\n                    InputProps={this.props.InputProps}\n                    helperText={this.checkError() ? this.props.errorText : this.props.helperText}\n                    style={{\n                        marginBottom: this.props.marginBottom ? this.props.marginBottom : \"10px\"\n                    }}/>\n            </div>\n        )\n    }\n}\nexport default MythicTextField;\n","export default __webpack_public_path__ + \"static/media/mythic.7189479f.svg\";","import { makeVar } from '@apollo/client';\n\nexport const meState = makeVar({});\nexport const menuOpen = makeVar(false);\n\nif (localStorage.getItem(\"access_token\") !== null){\n    meState({\n        loggedIn: true,\n        access_token: localStorage.getItem(\"access_token\"),\n        refresh_token: localStorage.getItem(\"refresh_token\"),\n        user: JSON.parse(localStorage.getItem(\"user\"))\n    });\n}\nexport const successfulLogin = (data) => {\n    localStorage.setItem(\"access_token\", data.access_token);\n    localStorage.setItem(\"refresh_token\", data.refresh_token);\n    localStorage.setItem(\"user\", JSON.stringify(data.user));\n    meState({\n        loggedIn: true,\n        ...data\n    });\n}\nexport const successfulRefresh = (data) => {\n    localStorage.setItem(\"access_token\", data.access_token);\n}\n","import React from 'react';\nimport {Button} from '@material-ui/core';\nimport MythicTextField from '../../MythicComponents/MythicTextField';\nimport logo from '../../../assets/mythic.svg';\nimport { Redirect } from 'react-router-dom';\nimport { meState, successfulLogin } from '../../../cache';\nimport { useReactiveVar } from '@apollo/client';\nimport { useSnackbar } from 'notistack';\n\nexport function LoginForm(props){\n    const me = useReactiveVar(meState);\n    const { enqueueSnackbar } = useSnackbar();\n    const [username, setUsername] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const submit = e => {\n        e.preventDefault();\n        if( username === \"\" || password === \"\"){\n            enqueueSnackbar(\"Username and Password required\", {variant: \"warning\"});\n            return;\n        }\n        const requestOptions = {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({username, password})\n        };\n        const response = fetch('/auth', requestOptions).then((response) => {\n            response.json().then(data => {\n                //console.log(data)\n                if(\"access_token\" in data){\n                    successfulLogin(data);\n                }else{\n                    enqueueSnackbar(\"Invalid Username or Password\", {\n                            variant: 'warning',\n                            autoHideDuration: 2000\n                        });\n                    console.log(\"Error\", data);\n                }\n            }).catch(error => {\n            enqueueSnackbar(\"Error getting JSON from server\", {\n                            variant: 'warning',\n                            autoHideDuration: 2000\n                        });\n                console.log(\"Error trying to get json response\", error.toString());\n            });\n        }).catch(error => {\n        enqueueSnackbar(\"Error talking to server\", {\n                            variant: 'warning',\n                            autoHideDuration: 2000\n                        });\n            console.log(\"There was an error!\", error.toString());\n        });\n    }\n    const onUsernameChange = (name, value, error) => {\n        setUsername(value);\n    }\n    const onPasswordChange = (name, value, error) => {\n        setPassword(value);\n    }\n    const redirectPath = () => {\n        const locationState = props.location.state;\n        return locationState && locationState.from ? locationState.from.pathname : '/';\n    }\n    return (\n        <div style={{justifyContent: \"center\", display: \"flex\"}}>\n        { \n            me.loggedIn ?\n                (\n                    <Redirect to={redirectPath()}/>\n                )\n               : (\n                    <div>\n                    <img src={logo} height=\"400px\" alt=\"Mythic logo\"/>\n                        <form onSubmit={submit}>\n                            <MythicTextField name='username' value={username} onChange={onUsernameChange} width={30} />\n                            <MythicTextField name='password' type=\"password\" value={password} onChange={onPasswordChange} width={30} />\n                            <Button type=\"submit\" color=\"primary\" onClick={submit} variant=\"contained\" style={{marginRight: \"10px\"}}>Login</Button>\n                            <Button color=\"primary\" variant=\"contained\">Register</Button>\n                        </form>\n                    </div>\n                )\n        }\n        </div>\n  )\n}\n\n","import React from 'react';\nimport {Button} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport function APITokenRow(props){\n    const onChanged = (evt) => {\n        const {name} = evt.target;\n        const {id} = props;\n        props.onChanged({id, name});\n    }\n    return (\n            <TableRow key={\"apitokenRow\" + props.id}>\n                <TableCell><Button startIcon={<DeleteIcon/>} color=\"secondary\" variant=\"contained\">Delete</Button></TableCell>\n                <TableCell>\n                    <Switch\n                        checked={props.active}\n                        onChange={onChanged}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                        name=\"active\"\n                      />\n                </TableCell>\n                <TableCell>{props.token_type}</TableCell>\n                <TableCell>{props.token_value}</TableCell>\n            </TableRow>\n        )\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MythicTextField from '../../MythicComponents/MythicTextField';\n\n\nexport function SettingsOperatorDialog(props) {\n    const [username, setUsername] = React.useState(props.username ? props.username : \"\");\n    const [passwordOld, setPasswordOld] = React.useState(\"\");\n    const [passwordNew, setPasswordNew] = React.useState(\"\");\n    \n    const onUsernameChange = (name, value, error) => {\n        setUsername(value);\n    }\n    const onPasswordOldChange = (name, value, error) => {\n        setPasswordOld(value);\n    }\n    const onPasswordNewChange = (name, value, error) => {\n        setPasswordNew(value);\n    }\n    const onAccept = () =>{\n        props.onAccept(props.id, username, passwordOld, passwordNew);\n    }\n  \n  return (\n    <React.Fragment>\n        <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers={true}>\n          <DialogContentText>\n            Use this dialog to update some information about an operator.\n          </DialogContentText>\n          <MythicTextField\n            autoFocus\n            placeholder={props.username}\n            value={username}\n            onChange={onUsernameChange}\n            margin=\"dense\"\n            id=\"username\"\n            name=\"username\"\n          />\n          <MythicTextField\n            margin=\"dense\"\n            id=\"passwordOld\"\n            onChange={onPasswordOldChange}\n            name=\"old password\"\n            type=\"password\"\n          />\n          <MythicTextField\n            margin=\"dense\"\n            id=\"passwordNew\"\n            onChange={onPasswordNewChange}\n            name=\"new password\"\n            type=\"password\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={onAccept} color=\"primary\">\n            Update\n          </Button>\n        </DialogActions>\n  </React.Fragment>\n  );\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nexport function SettingsOperatorDeleteDialog(props) {\n    const onAccept = () =>{\n        props.onAccept(props.id);\n    }\n  \n  return (\n    <React.Fragment>\n        <DialogTitle id=\"form-dialog-title\">Delete Operator</DialogTitle>\n        <DialogContent dividers={true}>\n          <DialogContentText>\n            This deletes an operator and prevents them from permanently logging in again. If you want a temporary solution, disable the operator instead.\n          </DialogContentText>\n          <DialogContentText>\n            Are you sure you want to delete operator \"{props.username}\"?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={onAccept} color=\"secondary\">\n            Delete\n          </Button>\n        </DialogActions>\n  </React.Fragment>\n  );\n}\n\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\n\nexport function MythicDialog(props) {\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (props.open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [props.open]);\n\n  return (\n      <Dialog\n        \n        open={props.open}\n        onClose={props.onClose}\n        scroll=\"paper\"\n        maxWidth={props.maxWidth}\n        fullWidth={props.fullWidth}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        {props.innerDialog}\n      </Dialog>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\n\nexport function toLocalTime(date, view_utc_time) {\n    try {\n        if(date === null){\n            return \"N/A\";\n        }\n        let init_date = new Date(date);\n        if (view_utc_time) {\n            return date + \" UTC\";\n        }\n        return init_date.toDateString() + \" \" + init_date.toTimeString().substring(0, 8);\n    } catch (error) {\n        console.log(\"warning\", \"Failed to get local time converted: \" + error.toString());\n    }\n\n}\n\nexport function getTimeDifference(checkin_time) {\n    let date = new Date();\n    let now = date.getTime() + date.getTimezoneOffset() * 60000;\n    let millisec = now - (new Date(checkin_time).getTime());\n    let seconds = Math.trunc(((millisec / 1000)) % 60);\n    let minutes = Math.trunc(((millisec / (1000 * 60))) % 60);\n    let hours = Math.trunc(((millisec / (1000 * 60 * 60))) % 24);\n    let days = Math.trunc(((millisec / (1000 * 60 * 60 * 24))) % 365);\n    let output = \"\";\n    if(days !== 0){ output += days + \"d\";}\n    if(hours !== 0){ output += hours + \"h\";}\n    if(minutes !== 0){ output += minutes + \"m\";}\n    output += seconds + \"s\";\n    return output;\n}\n//https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n","import React from 'react';\nimport {Button} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport Typography from '@material-ui/core/Typography';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport { APITokenRow } from './SettingsOperatorAPIToken';\nimport { SettingsOperatorDialog } from './SettingsOperatorDialog';\nimport { SettingsOperatorDeleteDialog } from './SettingsOperatorDeleteDialog';\nimport { MythicDialog } from '../../MythicComponents/MythicDialog';\nimport { toLocalTime } from '../../utilities/Time';\nimport { meState } from '../../../cache';\nimport {useReactiveVar} from '@apollo/client';\n\nexport function SettingsOperator(props){\n    const [open, setOpen] = React.useState(false);\n    const [openUpdate, setOpenUpdateDialog] = React.useState(false);\n    const [openDelete, setOpenDeleteDialog] = React.useState(false);\n    const me = useReactiveVar(meState);\n    const onViewUTCChanged = (evt) => {\n        const {id} = props;\n        props.onViewUTCChanged(id, !props[evt.target.name]);\n    }\n    const onAdminChanged = (evt) => {\n        const {id} = props;\n        props.onAdminChanged(id, !props[evt.target.name]);\n    }\n    const onActiveChanged = (evt) => {\n        const {id} = props;\n        props.onActiveChanged(id, !props[evt.target.name]);\n    }\n    const apitokenOnChanged = (id, name) => {\n        \n    }\n    const onAccept = (id, username, passwordOld, passwordNew) => {\n        console.log(\"settingsoperator onAccept\", id, username, passwordOld, passwordNew);\n    }\n    const onAcceptDelete = (id) => {\n        props.onDeleteOperator(id);\n        setOpenDeleteDialog(false);\n    }\n    return (\n        <React.Fragment>\n            <TableRow key={props.id}>\n                <TableCell><Button size=\"small\" onClick={()=>{setOpenDeleteDialog(true);}} startIcon={<DeleteIcon/>} color=\"secondary\" variant=\"contained\">Delete</Button>\n                    <MythicDialog open={openDelete} \n                        onClose={()=>{setOpenDeleteDialog(false);}} \n                        innerDialog={<SettingsOperatorDeleteDialog onAccept={onAcceptDelete} {...props} />}\n                     />\n                </TableCell>\n                <TableCell>{props.username}</TableCell>\n                <TableCell><Button size=\"small\" onClick={()=>{setOpenUpdateDialog(true);}} color=\"primary\" variant=\"contained\">Update</Button>\n                    <MythicDialog open={openUpdate} \n                        onClose={()=>{setOpenUpdateDialog(false);}} \n                        innerDialog={<SettingsOperatorDialog onAccept={onAccept} handleClose={()=>{setOpenUpdateDialog(false);}} title=\"Update Operator\"  {...props}/>}\n                     />\n                </TableCell>\n                <TableCell>\n                    <Switch\n                        checked={props.view_utc_time}\n                        onChange={onViewUTCChanged}\n                        color=\"primary\"\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                        name=\"view_utc_time\"\n                      />\n                </TableCell>\n                <TableCell>\n                    <Switch\n                        checked={props.active}\n                        onChange={onActiveChanged}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                        name=\"active\"\n                      />\n                </TableCell>\n                <TableCell>{toLocalTime(props.last_login, me.user.view_utc_time)}</TableCell>\n                <TableCell>{toLocalTime(props.creation_time, me.user.view_utc_time)}</TableCell>\n                <TableCell>\n                    <Switch\n                        checked={props.admin}\n                        onChange={onAdminChanged}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                        name=\"admin\"\n                      />\n                </TableCell>\n                <TableCell>\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                        {open ? <KeyboardArrowUpIcon className=\"mythicElement\"/> : <KeyboardArrowDownIcon className=\"mythicElement\"/>}\n                      </IconButton>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n            <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={9}>\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <Box margin={1}>\n                  <Typography variant=\"h6\" gutterBottom component=\"div\" style={{display: \"inline-block\"}}>\n                    API Tokens\n                  </Typography>\n                  <Button size=\"small\" style={{float: \"right\"}} startIcon={<AddCircleOutlineOutlinedIcon/>} color=\"primary\" variant=\"contained\">New</Button>\n                  <Table size=\"small\" aria-label=\"tokens\" style={{\"tableLayout\": \"fixed\", \"overflowWrap\": \"break-word\"}}>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell style={{width: \"7rem\"}}>Delete</TableCell>\n                        <TableCell style={{width: \"5rem\"}}>Active</TableCell>\n                        <TableCell style={{width: \"5rem\"}}>Type</TableCell>\n                        <TableCell>Token</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {\n                        props.apitokens.map((token) => (<APITokenRow {...token} onChanged={apitokenOnChanged} key={\"token\" + token.id} />))\n                      }\n                    </TableBody>\n                  </Table>\n                </Box>\n              </Collapse>\n            </TableCell>\n          </TableRow>\n        </React.Fragment>\n        )\n}\n\n","import React from 'react';\nimport {Button} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { SettingsOperator } from './SettingsOperator';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport { SettingsOperatorDialog } from './SettingsOperatorDialog';\nimport { MythicDialog } from '../../MythicComponents/MythicDialog';\nimport { useSnackbar } from 'notistack';\n\n\nexport function SettingsOperatorTable(props){\n    const [openNew, setOpenNewDialog] = React.useState(false);\n    const { enqueueSnackbar } = useSnackbar();\n    const onSubmitNewOperator = (id, username, passwordOld, passwordNew) => {\n        if(passwordOld !== passwordNew){\n            enqueueSnackbar(\"Passwords don't match\", {variant: \"error\"});\n        }else if(passwordNew.length === 0){\n            enqueueSnackbar(\"Password must not be empty\", {variant: \"error\"});\n        }else if(username.length === 0){\n            enqueueSnackbar(\"Username must not be empty\", {variant: \"error\"});\n        }else{\n            props.onNewOperator(username, passwordNew);\n            setOpenNewDialog(false);\n        }\n    }\n    return (\n        <TableContainer component={Paper} className=\"mythicElement\">\n            <Typography variant=\"h3\" align=\"left\" id=\"SettingsTable\" component=\"div\" \n            style={{\"display\": \"inline-block\", \"float\": \"left\", \"marginLeft\": \"10px\"}}>\n              Settings\n            </Typography>    \n            <Button size=\"small\" onClick={()=>{setOpenNewDialog(true);}} style={{float: \"right\"}} startIcon={<AddCircleOutlineOutlinedIcon/>} color=\"primary\" variant=\"contained\">New Operator</Button>\n            <MythicDialog open={openNew} \n                onClose={()=>{setOpenNewDialog(false);}} \n                innerDialog={<SettingsOperatorDialog title=\"New Operator\" onAccept={onSubmitNewOperator} handleClose={()=>{setOpenNewDialog(false);}}  {...props}/>}\n             />\n            <Table  size=\"small\" style={{\"tableLayout\": \"fixed\", \"maxWidth\": \"calc(100vw)\", \"overflow\": \"scroll\"}}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Delete Account</TableCell>\n                        <TableCell>Username</TableCell>\n                        <TableCell>Modify</TableCell>\n                        <TableCell>Use UTC Timestamps</TableCell>\n                        <TableCell>Account Active</TableCell>\n                        <TableCell>Last Login</TableCell>\n                        <TableCell>Account Creation Date</TableCell>\n                        <TableCell>Admin Status</TableCell>\n                        <TableCell>More...</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                \n                {props.operator.map( (op) => (\n                    <SettingsOperator\n                        onViewUTCChanged={props.onViewUTCChanged}\n                        onAdminChanged={props.onAdminChanged}\n                        onActiveChanged={props.onActiveChanged} \n                        onDeleteOperator={props.onDeleteOperator}\n                        key={\"operator\" + op.id}\n                        {...op}\n                    />\n                ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\n","import React from 'react';\nimport { SettingsOperatorTable } from './SettingsOperatorTable';\nimport {useMutation, useQuery, gql} from '@apollo/client';\nimport { meState } from '../../../cache';\nimport {useReactiveVar} from '@apollo/client';\nimport { useSnackbar } from 'notistack';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst GET_Operator = gql`\nquery GetOperators {\n  operator(where: {deleted: {_eq: false}}, order_by: {username: asc}) {\n    active\n    admin\n    creation_time\n    deleted\n    id\n    last_login\n    username\n    view_utc_time\n    apitokens {\n      token_value\n      token_type\n      active\n      id\n    }\n  }\n}\n`;\nconst operatorsUpdateViewUTCTime = gql`\nmutation SettingsUpdateOperatorViewUTCTime($id: Int!, $view_utc_time: Boolean) {\n  update_operator(where: {id: {_eq: $id}}, _set: {view_utc_time: $view_utc_time}) {\n    returning {\n      id\n      view_utc_time\n    }\n  }\n}\n`;\nconst operatorsUpdateAdmin = gql`\nmutation SettingsUpdateOperatorAdminMutation($id: Int!, $admin: Boolean) {\n  update_operator(where: {id: {_eq: $id}}, _set: {admin: $admin}) {\n    returning {\n      id\n      admin\n    }\n  }\n}\n`;\nconst operatorsUpdateActive = gql`\nmutation SettingsUpdateOperatorActiveMutation($id: Int!, $active: Boolean) {\n  update_operator(where: {id: {_eq: $id}}, _set: {active: $active}) {\n    returning {\n      id\n      active\n    }\n  }\n}\n`;\nconst operatorsDelete = gql`\nmutation SettingsDeleteOperatorMutation($id: Int!) {\n  update_operator(where: {id: {_eq: $id}}, _set: {deleted: true}) {\n    returning {\n      id\n    }\n  }\n}\n`;\nconst newOperatorMutation = gql`\nmutation NewOperator($username: String!, $password: String!) {\n  createOperator(input: {password: $password, username: $username}) {\n    active\n    creation_time\n    deleted\n    error\n    id\n    last_login\n    status\n    username\n    view_utc_time\n  }\n}\n`;\nexport function Settings(props){\n    const me = useReactiveVar(meState);\n    const { enqueueSnackbar } = useSnackbar();\n    const { loading, error, data } = useQuery(GET_Operator);\n    const [updateUTC] = useMutation(operatorsUpdateViewUTCTime, {\n        update: (cache, {data}) => {\n            if(data.update_operator.returning[0].id === me.user.id){\n                const state = meState();\n                state.user.view_utc_time = data.update_operator.returning[0].view_utc_time;\n                meState(state);\n            }\n        }\n    });\n    const [deleteOperator] = useMutation(operatorsDelete, {\n        update: (cache, {data}) => {\n            const existingOperators = cache.readQuery({query: GET_Operator});\n            const removedOperator = data.update_operator.returning[0];\n            const newFinalOperators = existingOperators.operator.filter(op => (op.id !== removedOperator.id));\n            cache.writeQuery({\n                query: GET_Operator,\n                data: {operator: newFinalOperators}\n            });\n        }\n    });\n    const [updateAdmin] = useMutation(operatorsUpdateAdmin);\n    const [updateActive] = useMutation(operatorsUpdateActive);\n    const [newOperator] = useMutation(newOperatorMutation, {\n        update: (cache, {data}) => {\n            if(data.createOperator.status === \"success\"){\n                const existingOperators = cache.readQuery({query: GET_Operator});\n                const newOperator = data.createOperator;\n                cache.writeQuery({\n                    query: GET_Operator,\n                    data: {operator: [newOperator, ...existingOperators.operator]}\n                });\n            }else{\n                enqueueSnackbar(data.createOperator.error, {variant: \"error\"});\n            }\n        }\n    });\n    const onViewUTCChanged = (id, value) => {\n        updateUTC({variables: {id, view_utc_time: value}});\n    }\n    const onAdminChanged = (id, value) => {\n        updateAdmin({variables: {id, admin: value}});\n    }\n    const onActiveChanged = (id, value) => {\n        updateActive({variables: {id, active: value}});\n    }\n    const onNewOperator = (username, password) => {\n        newOperator({variables: {username, password}});\n    }\n    const onDeleteOperator = (id) => {\n        deleteOperator({variables: {id}});\n    }\n    if (loading) {\n     return <LinearProgress />;;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    return (\n    <div style={{height: \"calc(94vh)\", marginTop: \"10px\"}}>\n        <SettingsOperatorTable \n            onViewUTCChanged={onViewUTCChanged}\n            onAdminChanged={onAdminChanged}\n            onActiveChanged={onActiveChanged}\n            onNewOperator={onNewOperator}\n            onDeleteOperator={onDeleteOperator}\n            {...data} />\n        </div>\n    );\n} \n","import React, {useEffect} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { meState, menuOpen } from '../../../cache';\n\nexport function Logout(props){\n    useEffect(() => {\n        meState({loggedIn:false, accessToken: null, refreshToken: null, user: {}});\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"refresh_token\");\n        localStorage.removeItem(\"user\");\n        menuOpen(false);\n    })\n    return(\n        <Redirect to='/login' />\n    )\n}\n\n","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {useQuery, gql} from '@apollo/client';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst GET_Payload_Details = gql`\nquery GetPayloadDetails($payload_name: String!) {\n  payloadtype(where: {ptype: {_eq: $payload_name}}) {\n    buildparameters {\n      description\n      name\n      id\n      parameter\n      parameter_type\n      required\n      verifier_regex\n    }\n  }\n}\n`;\n\nexport function PayloadTypeBuildDialog(props) {\n    const [buildParams, setBuildParams] = useState([]);\n    const { loading, error } = useQuery(GET_Payload_Details, {\n        variables: {payload_name: props.payload_name},\n        onCompleted: data => {\n            console.log(data);\n            setBuildParams(data.payloadtype[0].buildparameters);\n        }\n        });\n    if (loading) {\n     return <LinearProgress />;;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n  \n  return (\n    <React.Fragment>\n        <DialogTitle id=\"form-dialog-title\">{props.payload_name}'s Build Parameters</DialogTitle>\n        <DialogContent dividers={true}>\n          <DialogContentText>\n            These are the build parameters associated with this payload\n          </DialogContentText>\n            <Table size=\"small\" aria-label=\"details\" style={{\"tableLayout\": \"fixed\", \"overflowWrap\": \"break-word\"}}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Parameter</TableCell>\n                    <TableCell>Value</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    buildParams.map( (param) => (\n                        <TableRow key={\"buildprop\" + param.id}>\n                            <TableCell>{param.description}</TableCell>\n                            <TableCell>\n                            Scripting/Building Name:<br/>{param.name}<br/>\n                            Parameter Type:<br/>{param.parameter_type}<br/>\n                            Default Parameter:<br/>{param.parameter}<br/>\n                            Required value?<br/>{param.required ? \"Yes\": \"No\"}<br/>\n                            Verifier Regex:<br/>{param.verifier_regex}<br/>\n                            </TableCell>\n                        </TableRow>\n                    ))\n                    \n                  }\n                </TableBody>\n              </Table>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n  </React.Fragment>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Badge from '@material-ui/core/Badge';\nimport { MythicDialog } from '../../MythicComponents/MythicDialog';\nimport {PayloadTypeBuildDialog} from './PayloadTypeBuildDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    margin: \"10px\"\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  running: {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n  },\n  notrunning: {\n    backgroundColor: 'red',\n    color: 'red',\n  },\n}));\nconst StyledAvatar = withStyles((theme) => ({\n    badge: {\n        boxShadow: \"0 0 0 2px white\",\n        '&::after': {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          borderRadius: '50%',\n          animation: '$ripple 1.2s infinite ease-in-out',\n          border: '1px solid currentColor',\n          content:'\"\"'\n        },\n      },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\nexport function PayloadTypeCard(props) {\n  const classes = useStyles();\n  const [openBuildingDialog, setOpenBuildingDialog] = React.useState(false);\n  let date = new Date();\n  let now = date.getTime() + date.getTimezoneOffset() * 60000;\n  let heartbeat = new Date(props.last_heartbeat);\n  let difference = (now - heartbeat.getTime()) / 1000;\n  const running = difference < 30 ? 'running' : 'notrunning';\n\n  return (\n    <Card className={classes.root} elevation={5} style={{maxWidth: \"99%\"}}>\n        <div>\n        <StyledAvatar overlap=\"circle\" classes={{badge: classes[running]}} invisible={false} anchorOrigin={{vertical: \"bottom\", horizontal: \"right\"}}>\n            <CardMedia\n            className={classes.media}\n            component=\"img\"\n            style={{width: \"100px\", padding: \"10px\"}}\n            src={process.env.PUBLIC_URL + props.ptype + \".svg\"}\n          />\n        </StyledAvatar>\n        </div>\n      <div>\n        <Typography variant=\"h4\" component=\"h1\" style={{textAlign:\"left\", marginLeft: \"10px\"}}>{props.ptype}</Typography>\n        <CardContent style={{textAlign:\"left\"}}>\n            <Typography variant=\"body1\" component=\"p\">\n              <b>Author:</b> {props.author}\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\">\n              <b>Supported Operating Systems:</b> {props.supported_os}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {props.note}\n            </Typography>\n        </CardContent>\n        <CardActions >\n            <Button size=\"small\" color=\"primary\" href={\"/docs/agents/\" + props.ptype} target=\"_blank\">\n              Docs\n            </Button>\n            <Button size=\"small\" color=\"primary\">\n              Commands\n            </Button>\n            <Button onClick={()=>{setOpenBuildingDialog(true);}} color=\"primary\" variant=\"contained\">Building</Button>\n                <MythicDialog fullWidth={true} maxWidth=\"lg\" open={openBuildingDialog} \n                    onClose={()=>{setOpenBuildingDialog(false);}} \n                    innerDialog={<PayloadTypeBuildDialog {...props} payload_name={props.ptype} />}\n                 />\n          </CardActions>\n      </div>\n    </Card>\n  );\n}\n","import React  from 'react';\nimport { PayloadTypeCard } from './PayloadTypeCard';\nimport {useSubscription, gql } from '@apollo/client';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n const SUB_Payload_Types = gql`\n subscription getPayloadTypesSubscription {\n  payloadtype(where: {deleted: {_eq: false}}, order_by: {ptype: asc}) {\n    author\n    container_running\n    id\n    last_heartbeat\n    note\n    ptype\n    supported_os\n    wrapper\n  }\n}\n `;\nexport function PayloadTypes(props){\n    const { loading, error, data } = useSubscription(SUB_Payload_Types);\n\n    if (loading) {\n     return <LinearProgress />;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    return (\n        <div style={{maxHeight: \"calc(95vh)\", maxWidth: \"100%\"}}>\n        {\n            data.payloadtype.map( (pt) => (\n                <PayloadTypeCard key={pt.id} {...pt} />\n            ))\n        }\n        </div>\n    );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\n/*\n    Takes in props for Boolean of first/last\n    Takes in props for canceled\n    Takes in props for finished\n*/\nexport function CreatePayloadNavigationButtons(props){\n\n    return (\n        <div >\n            <Button\n                disabled={props.first}\n                color=\"primary\"\n                onClick={props.canceled}\n              >\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={props.finished}\n              >\n                {props.last ? 'Create Payload' : 'Next'}\n              </Button>\n        </div>\n    );\n} \n","import React from 'react';\nimport {useQuery, gql} from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\nimport { CreatePayloadNavigationButtons} from './CreatePayloadNavigationButtons';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst GET_Payload_Types = gql`\nquery getPayloadTypesQuery {\n  payloadtype(where: {deleted: {_eq: false}, wrapper: {_eq: false}}) {\n    id\n    supported_os\n  }\n}\n `;\n\nexport function Step1SelectOS(props){\n    const [os, setOS] = React.useState('');\n    const { loading, error, data } = useQuery(GET_Payload_Types);\n\n    if (loading) {\n     return <div><CircularProgress /></div>;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    const finished = () => {\n        props.finished(os);\n    }\n    const canceled = () => {\n        props.canceled();\n    }\n    const getOSOptions = () => {\n        const optionsReduced= data.payloadtype.reduce((currentOptions, payloadtype) => {\n            const adds = payloadtype.supported_os.split(\",\").filter( (prev, os) => {\n                    if(!currentOptions.includes(os)){\n                        return [...prev, os];\n                    }\n                    return prev;\n                }, []);\n            return [...currentOptions, ...adds];\n        }, []);\n        const sortedOptions = optionsReduced.sort();\n        if(os === \"\"){\n            setOS(sortedOptions[0]);\n        }\n        return sortedOptions;\n    }\n    return (\n        <div >\n        <Typography variant=\"h3\" align=\"left\" id=\"selectospage\" component=\"div\" \n            style={{ \"marginLeft\": \"10px\"}}>\n              Select Target Operating System\n        </Typography> <br/>\n        \n        <FormControl>\n            <Select\n              native\n              value={os}\n              onChange={evt => setOS(evt.target.value)}\n            >\n            {\n                getOSOptions().map((opt) => (\n                    <option key={\"step1\" + opt} value={opt}>{opt}</option>\n                ))\n            }\n            </Select>\n            <FormHelperText>Target Operating System</FormHelperText>\n        </FormControl><br/><br/>\n        <CreatePayloadNavigationButtons first={props.first} last={props.last} canceled={canceled} finished={finished} />\n        </div>\n    );\n} \n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MythicTextField from '../../MythicComponents/MythicTextField';\n\nexport function CreatePayloadParameter(props){\n    const [value, setValue] = React.useState(\"\");\n    \n    const getParamChooseOptions = () => {\n        if(props.default_value){\n            const options = props.default_value.split(\"\\n\");\n            if( value === null){\n                setValue(options[0]);\n            }\n            return options;\n        }else{\n            const options = props.parameter.split(\"\\n\");\n            if( value === null){\n                setValue(options[0]);\n            }\n            return options;\n        }\n        \n    }\n    const onChangeValue = (evt) => {\n        setValue(evt.target.value);\n        props.onChange(props.name, evt.target.value, false);\n    }\n    const onChangeText = (name, value, error) => {\n        setValue(value);\n        props.onChange(props.name, value, error);\n    }\n    const testParameterValues = (curVal) => {\n        if( props.required && props.verifier_regex !== \"\"){\n            return !RegExp(props.verifier_regex).test(curVal);\n        }else if(props.verifier_regex !== \"\" && curVal !== \"\"){\n            return !RegExp(props.verifier_regex).test(curVal);\n        }else{\n            return false;\n        }\n    }\n    const getParameterObject = () => {\n        switch(props.parameter_type){\n            case \"ChooseOne\":\n                return (\n                    <FormControl>\n                        <Select\n                          native\n                          value={value}\n                          onChange={onChangeValue}\n                        >\n                        {\n                            getParamChooseOptions().map((opt, i) => (\n                                <option key={\"buildparamopt\" + i} value={opt}>{opt}</option>\n                            ))\n                        }\n                        </Select>\n                    </FormControl>\n                )\n            case \"String\":\n                return (\n                    <MythicTextField required={props.required} placeholder={props.default_value} value={value} multiline={true}\n                        onChange={onChangeText} display=\"inline-block\"\n                        validate={testParameterValues} errorText={\"Must match: \" + props.verifier_regex}\n                    />\n                )\n           default:\n            return null\n        }\n    }\n    \n    return (\n            <TableRow key={\"buildparam\" + props.id}>\n                <TableCell>{props.description}\n                 </TableCell>\n                <TableCell>\n                    {getParameterObject()}\n                </TableCell>\n            </TableRow>\n        )\n}\n\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { CreatePayloadParameter } from './CreatePayloadParameter';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport function CreatePayloadBuildParametersTable(props){\n\n    return (\n        <TableContainer component={Paper} className=\"mythicElement\">\n            <Typography variant=\"h4\" align=\"left\" id=\"SettingsTable\" component=\"div\" \n            style={{\"display\": \"inline-block\", \"float\": \"left\", \"marginLeft\": \"10px\"}}>\n              Build Parameters\n            </Typography>    \n            <Table size=\"small\" style={{\"tableLayout\": \"fixed\", \"maxWidth\": \"calc(100vw)\", \"overflow\": \"scroll\"}}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Build Parameter</TableCell>\n                        <TableCell>Value</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                {props.buildParameters.map( (op) => (\n                    <CreatePayloadParameter key={\"buildparamtablerow\" + op.id} onChange={props.onChange} {...op} />\n                ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n} \n","import React from 'react';\nimport {useQuery, gql} from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Select from '@material-ui/core/Select';\nimport { CreatePayloadNavigationButtons} from './CreatePayloadNavigationButtons';\nimport {CreatePayloadBuildParametersTable} from './CreatePayloadBuildParametersTable';\nimport Typography from '@material-ui/core/Typography';\n\nconst GET_Payload_Types = gql`\nquery getPayloadTypesBuildParametersQuery($os: String!) {\n  payloadtype(where: {supported_os: {_ilike: $os}, deleted: {_eq: false}, wrapper: {_eq: false}}) {\n    ptype\n    note\n    buildparameters {\n      id\n      name\n      description\n      parameter\n      parameter_type\n      required\n      verifier_regex\n    }\n  }\n}\n `;\n\nexport function Step2SelectPayloadType(props){\n    const [selectedPayloadType, setSelectedPayloadType] = React.useState('');\n    const [payloadTypeParameters, setSelectedPayloadTypeParameters] = React.useState([]);\n    const { loading, error, data } = useQuery(GET_Payload_Types, {variables:{os: \"%\" + props.buildOptions + \"%\"},\n        onCompleted: data => {\n            if(data.payloadtype.length > 0){\n                setSelectedPayloadType(data.payloadtype[0].ptype);\n                const payloadtypedata = data.payloadtype.reduce( (prev, payload) => {\n                    if(payload.ptype === data.payloadtype[0].ptype){\n                        const params = payload.buildparameters.map( (param) => {\n                            return {...param, error: param.required}\n                        });\n                        return params;\n                    }\n                    return prev;\n                }, []);\n                setSelectedPayloadTypeParameters(payloadtypedata);\n            }\n        }\n    });\n\n    if (loading) {\n     return <div><CircularProgress /></div>;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    const finished = () => {\n        const finishedParams = payloadTypeParameters.map( (param) => {\n            return {\"name\": param.name, \"value\": param.value}\n        });\n        props.finished({\"payload_type\": selectedPayloadType, \"parameters\": finishedParams});\n    }\n    const canceled = () => {\n        props.canceled();\n    }\n    const changePayloadType = (evt) => {\n        setSelectedPayloadType(evt.target.value);\n        const payloadtypedata = data.payloadtype.reduce( (prev, payload) => {\n            if(payload.ptype === evt.target.value){\n                const params = payload.buildparameters.map( (param) => {\n                    return {...param, error: param.required}\n                });\n                return params;\n            }\n            return prev;\n        }, []);\n        setSelectedPayloadTypeParameters(payloadtypedata);\n    }\n    const onChange = (name, value, error) => {\n        const newParams = payloadTypeParameters.map( (param) => {\n            if(param.name === name){\n                return {...param, value, error}\n            }\n            return param;\n        });\n        setSelectedPayloadTypeParameters(newParams);\n    }\n    return (\n        <div >\n            <Typography variant=\"h3\" align=\"left\" id=\"selectospage\" component=\"div\" \n                style={{\"marginLeft\": \"10px\"}}>\n                  Select Target Payload Type\n            </Typography>\n            <Select\n              native\n              value={selectedPayloadType}\n              onChange={changePayloadType}\n            >\n            {\n                data.payloadtype.map((opt) => (\n                    <option key={\"step2\" + opt.ptype} value={opt.ptype}>{opt.ptype}</option>\n                ))\n            }\n            </Select><br/>\n            <CreatePayloadBuildParametersTable onChange={onChange} buildParameters={payloadTypeParameters} />\n            <CreatePayloadNavigationButtons first={props.first} last={props.last} canceled={canceled} finished={finished} />\n        </div>\n    );\n} \n","import React from 'react';\nimport {useQuery, gql} from '@apollo/client';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\nimport { CreatePayloadNavigationButtons} from './CreatePayloadNavigationButtons';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst GET_Payload_Types = gql`\nquery getCommands($payloadType: String!) {\n  command(where: {payloadtype: {ptype: {_eq: $payloadType}}}, order_by: {cmd: asc}) {\n    cmd\n    id\n  }\n}\n `;\n\nexport function Step3SelectCommands(props){\n    const [commands, setCommands] = React.useState([]);\n    const { loading, error, data } = useQuery(GET_Payload_Types, {variables: {payloadType: props.buildOptions[\"payload_type\"]}});\n\n    if (loading) {\n     return <div><CircularProgress /></div>;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    const finished = () => {\n        props.finished(commands);\n    }\n    const canceled = () => {\n        props.canceled();\n    }\n    const handleChangeMultiple = (event) => {\n        const { options } = event.target;\n        const value = [];\n        for (let i = 0, l = options.length; i < l; i += 1) {\n          if (options[i].selected) {\n            value.push(options[i].value);\n          }\n        }\n        setCommands(value);\n      };\n    return (\n        <div >\n        <Typography variant=\"h3\" align=\"left\" id=\"selectcommands\" component=\"div\" \n            style={{ \"marginLeft\": \"10px\"}}>\n              Select Commands\n        </Typography> <br/>\n        \n        <FormControl>\n            <Select\n              multiple\n              native\n              value={commands}\n              inputProps={{size: 20}}\n              onChange={handleChangeMultiple}\n            >\n            {\n                data.command.map((opt) => (\n                    <option key={\"step3\" + opt.cmd} value={opt.cmd}>{opt.cmd}</option>\n                ))\n            }\n            </Select>\n            <FormHelperText>Select Commands</FormHelperText>\n        </FormControl><br/><br/>\n        <CreatePayloadNavigationButtons first={props.first} last={props.last} canceled={canceled} finished={finished} />\n        </div>\n    );\n} \n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { CreatePayloadParameter } from './CreatePayloadParameter';\n\n\nexport function CreatePayloadC2ProfileParametersTable(props){\n\n    const onChange = (paramName, value, error) => {\n        props.onChange(props.name, paramName, value, error);\n    }\n    return (\n    <TableContainer component={Paper} className=\"mythicElement\">\n  \n            <Table size=\"small\" style={{\"tableLayout\": \"fixed\", \"maxWidth\": \"calc(100vw)\", \"overflow\": \"scroll\"}}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell style={{width: \"30%\"}}>Parameter</TableCell>\n                        <TableCell>Value</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                \n                {props.c2profileparameters.map( (op) => (\n                <CreatePayloadParameter key={\"c2paramtablerow\" + op.id} onChange={onChange} {...op} />\n            ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n} \n","import React from 'react';\nimport {useQuery, gql} from '@apollo/client';\nimport { useSnackbar } from 'notistack';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { CreatePayloadNavigationButtons} from './CreatePayloadNavigationButtons';\nimport {CreatePayloadC2ProfileParametersTable} from './CreatePayloadC2ProfileParametersTable';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst GET_Payload_Types = gql`\nquery getPayloadTypesC2ProfilesQuery($payloadType: String!) {\n  c2profile(where: {payloadtypec2profiles: {payloadtype: {ptype: {_eq: $payloadType}}}, deleted: {_eq: false}}) {\n    name\n    is_p2p\n    description\n    c2profileparameters(where: {deleted: {_eq: false}}) {\n      default_value\n      description\n      format_string\n      id\n      name\n      parameter_type\n      randomize\n      required\n      verifier_regex\n    }\n  }\n}\n `;\n\nexport function Step4C2Profiles(props){\n    const [c2Profiles, setC2Profiles] = React.useState([]);\n    const { enqueueSnackbar } = useSnackbar();\n    const { loading, error } = useQuery(GET_Payload_Types, {variables:{payloadType: props.buildOptions[\"payload_type\"]},\n        onCompleted: data => {\n            const profiles = data.c2profile.map( (c2) => {\n                const parameters = c2.c2profileparameters.map( (param) => {\n                    return {...param, error: param.required}\n                });\n                return {...c2, \"selected\": false, c2profileparameters: parameters};\n            });\n            setC2Profiles(profiles);\n        }\n    });\n\n    if (loading) {\n     return <div><CircularProgress /></div>;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    const finished = () => {\n        let allValid = true;\n        c2Profiles.forEach( (c2) => {\n            if(c2.selected){\n                c2.c2profileparameters.forEach( (param) => {\n                    if(param.error){\n                        allValid = false;\n                        enqueueSnackbar(c2.name + \"'s parameter \" + param.name + \" is invalid\", {\n                            variant: 'warning',\n                            autoHideDuration: 2000\n                        });\n                    }\n                });\n            }\n        });\n        if(allValid){\n            props.finished(c2Profiles);\n        }\n    }\n    const canceled = () => {\n        props.canceled();\n    }\n    const toggleC2Selection = (evt, c2) => {\n        const updatedc2 = c2Profiles.map( (curc2) => {\n            if(c2.name === curc2.name){\n                return {...curc2, selected: !curc2.selected}\n            }\n            return curc2;\n        });\n        setC2Profiles(updatedc2);\n    }\n    const updateC2Parameter = (c2Name, parameterName, value, error) => {\n        //console.log(c2Name, parameterName, value, error);\n        const updatedc2 = c2Profiles.map( (curC2) => {\n            if(curC2.name === c2Name){\n                const c2params = curC2.c2profileparameters.map( (param) => {\n                    if (param.name === parameterName){\n                        return {...param, error, value}\n                    }\n                    return param;\n                });\n                return {...curC2, c2profileparameters: c2params};\n            }\n            return curC2;\n        });\n        setC2Profiles(updatedc2);\n    }\n    return (\n        <div >\n            <Typography variant=\"h3\" align=\"left\" id=\"selectc2profiles\" component=\"div\" \n                style={{\"marginLeft\": \"10px\"}}>\n                  Select C2 Profiles\n            </Typography>\n            {\n                c2Profiles.map( (c2) => (\n                <React.Fragment>\n                    <FormControlLabel\n                      value=\"top\"\n                      key={\"step4c2switch\" + c2.id}\n                      control={\n                      <Switch\n                        checked={c2.selected}\n                        onChange={evt => toggleC2Selection(evt, c2)}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                        name=\"active\"\n                      />}\n                      label={c2.name}\n                      labelPlacement=\"top\"\n                      style={{display: \"inline\"}}\n                    />\n                    <Typography variant=\"body1\" align=\"left\" id=\"selectc2profiles\" component=\"div\" key={\"step4desc\" + c2.id}\n                        style={{\"marginLeft\": \"10px\"}}>\n                          {c2.description}\n                    </Typography>\n                    { c2.selected ? ( \n                        <CreatePayloadC2ProfileParametersTable key={\"step4table\" + c2.id} {...c2} onChange={updateC2Parameter} />\n                        ):(null)\n                    }\n                </React.Fragment>\n                ))\n            }\n<br/>\n            <CreatePayloadNavigationButtons first={props.first} last={props.last} canceled={canceled} finished={finished} />\n            <br/><br/>\n        </div>\n    );\n} \n","import React, {useEffect, useState, useContext} from 'react';\nimport {gql, useSubscription} from '@apollo/client';\nimport { useSnackbar, SnackbarContent } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport {ThemeContext} from 'styled-components';\n\n//fromNow must be in ISO format for hasura/postgres stuff\n//new Date().toISOString() will do it\nconst subscribe_payloads = gql`\nsubscription NewPayloadsSubscription($fromNow: timestamp!) {\n  payload(limit: 1, where: {deleted: {_eq: false}, creation_time: {_gte: $fromNow}}, order_by: {creation_time: desc}) {\n    build_message\n    build_phase\n    uuid\n    tag\n    id\n    filemetum{\n        agent_file_id\n    }\n  }\n}\n `;\nconst useStyles =  makeStyles(theme => ({\n    root: {\n        [theme.breakpoints.up('sm')]: {\n            minWidth: '344px !important',\n        },\n    },\n    typography: {\n        fontWeight: 'bold',\n    },\n    actionRoot: {\n        padding: '8px 8px 8px 16px',\n    },\n    icons: {\n        marginLeft: 'auto',\n    },\n    expand: {\n        padding: '8px 8px',\n        transform: 'rotate(0deg)',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    collapse: {\n        padding: 16,\n    },\n    checkIcon: {\n        fontSize: 20,\n        color: '#b3b3b3',\n        paddingRight: 4,\n    },\n    button: {\n        padding: 0,\n        textTransform: 'none',\n    },\n}));\n\nconst SnackMessage = React.forwardRef((props, ref) => {\n    \n    const theme = useContext(ThemeContext);\n    const classes = useStyles(theme);\n    const { closeSnackbar } = useSnackbar();\n    const [expanded, setExpanded] = useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    const handleDismiss = () => {\n        closeSnackbar(props.id);\n    };\n\n    return (\n        <SnackbarContent ref={ref} className={classes.root}>\n            <Card style={{backgroundColor: theme.successColor}} >\n                <CardActions classes={{ root: classes.actionRoot }}>\n                    <Typography variant=\"subtitle2\" className={classes.typography}>Payload successfuly built!</Typography>\n                    <div className={classes.icons}>\n                        <IconButton\n                            aria-label=\"Show more\"\n                            className={clsx(classes.expand, { [classes.expandOpen]: expanded })}\n                            onClick={handleExpandClick}\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                        <IconButton className={classes.expand} onClick={handleDismiss}>\n                            <CloseIcon />\n                        </IconButton>\n                    </div>\n                </CardActions>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <Paper className={classes.collapse}>\n                        <Typography gutterBottom>Agent ready for download</Typography>\n                        <Button size=\"small\" className={classes.button} download href={window.location.origin + \"/direct/download/\" + props.file_id}>\n                            <CheckCircleIcon className={classes.checkIcon} />\n                            Download now\n                        </Button>\n                    </Paper>\n                </Collapse>\n            </Card>\n        </SnackbarContent>\n    );\n});\nexport function PayloadSubscriptionNotification(props) {\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const [fromNow, setFromNow] = React.useState(null);\n    const { loading, error, data } = useSubscription(subscribe_payloads, {variables: {fromNow}});\n    \n    const badActions = key => (\n        <React.Fragment>\n            <Button onClick={() => { closeSnackbar(key) }} variant=\"outlined\">\n                'Dismiss'\n            </Button>\n        </React.Fragment>\n    )\n    useEffect( () => {\n        setFromNow(new Date().toISOString());\n    }, []);\n    useEffect( () => {\n        //console.log(data, loading, error);\n        if(!loading && !error && data && data.payload.length > 0){\n            if(data.payload[0].build_phase === \"success\"){\n                enqueueSnackbar(data.payload[0].build_message, {persist: true, content: key => <SnackMessage id={key} file_id={data.payload[0].filemetum.agent_file_id} />});\n            }else if(data.payload[0].build_phase === \"building\"){\n                enqueueSnackbar(`Building payload ${data.payload[0].uuid}...`, {variant: \"info\", autoHideDuration: 5000});\n            }else{\n                enqueueSnackbar(data.payload[0].build_message, {variant: \"error\", persist: true, action: badActions});\n            } \n        }else if(error){\n            console.log(error);\n            enqueueSnackbar(\"Mythic encountered an error\", {variant: \"error\"});\n        }\n    }, [loading, data, enqueueSnackbar]);\n    return (    \n       null\n    );\n}\n\n","import React from 'react';\nimport { gql, useMutation} from '@apollo/client';\nimport { useSnackbar } from 'notistack';\nimport { CreatePayloadNavigationButtons} from './CreatePayloadNavigationButtons';\nimport Typography from '@material-ui/core/Typography';\nimport {PayloadSubscriptionNotification} from './PayloadSubscriptionNotification';\n\n const create_payload = gql`\n mutation createPayloadMutation($payload: String!) {\n  createPayload(payloadDefinition: $payload) {\n    error\n    status\n    uuid\n  }\n}\n `;\n\n\nexport function Step5Build(props){\n    const { enqueueSnackbar } = useSnackbar();\n    \n    const [createPayloadMutation] = useMutation(create_payload, {\n        update: (cache, {data}) => {\n            if(data.createPayload.status === \"success\"){\n                enqueueSnackbar(\"Submitted payload to build pipeline\", {variant: \"info\"});\n            }else{\n                enqueueSnackbar(data.createPayload.error, {variant: \"error\"});\n            }\n        }\n    });\n    const finished = () => {\n        const buildParameters = props.buildOptions[1][\"parameters\"].map( (param) => {\n            return param;\n        });\n        const c2Profiles = props.buildOptions[3].reduce( (prev, c2) => {\n            if(c2.selected){\n                const parameters = c2.c2profileparameters.reduce( (prev, param) => {\n                    return {...prev, [param.name]: param.value}\n                }, {});\n                return [...prev, {\"c2_profile\": c2.name, \"c2_profile_parameters\": parameters}];\n            }\n            return prev;\n        }, []);\n        const finishedPayload = {\n            \"os\": props.buildOptions[0],\n            \"payload_type\": props.buildOptions[1][\"payload_type\"],\n            \"filename\": \"my payload.js\",\n            \"commands\": props.buildOptions[2],\n            \"build_parameters\": buildParameters,\n            \"c2_profiles\": c2Profiles\n            };\n        createPayloadMutation({variables: {payload: JSON.stringify(finishedPayload)}}).catch( (e) => {console.log(e)} );\n    }\n    const canceled = () => {\n        props.canceled();\n    }\n\n    return (\n        <div >\n            <Typography variant=\"h3\" align=\"left\" id=\"selectc2profiles\" component=\"div\" \n                style={{\"marginLeft\": \"10px\"}}>\n                  Payload Review\n            </Typography>\n            <br/>\n            <CreatePayloadNavigationButtons first={props.first} last={props.last} canceled={canceled} finished={finished} />\n            <br/><br/>\n            <PayloadSubscriptionNotification fromNow/>\n        </div>\n    );\n} \n","import React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport {Step1SelectOS} from './Step1SelectOS';\nimport {Step2SelectPayloadType} from './Step2SelectPayloadType';\nimport {Step3SelectCommands} from './Step3SelectCommands';\nimport {Step4C2Profiles} from './Step4C2Profiles';\nimport {Step5Build} from './Step5Build';\n\nfunction getSteps(){\n    return ['Select Target OS', 'Payload Type', 'Select Commands', 'Select C2 Profiles', 'Build']\n}\n\nexport function CreatePayload(props){\n    const [payload, setPayload] = React.useState({}); \n    const [activeStep, setActiveStep] = React.useState(0);\n    const getStepContent = (step) => {\n          switch (step) {\n            case 0:\n              return <Step1SelectOS buildOptions={payload} finished={handleStepData} canceled={cancelStep} first={true} last={false}/>;\n            case 1:\n              return <Step2SelectPayloadType buildOptions={payload[0]} finished={handleStepData} canceled={cancelStep} first={false} last={false}/>;\n            case 2:\n              return <Step3SelectCommands buildOptions={payload[1]} finished={handleStepData} canceled={cancelStep} first={false} last={false} />;\n            case 3:\n              return <Step4C2Profiles buildOptions={payload[1]} finished={handleStepData} canceled={cancelStep} first={false} last={false} />;\n            case 4:\n              return <Step5Build buildOptions={payload} canceled={cancelStep} first={false} last={true} />;\n            default:\n              return 'Unknown step';\n          }\n        }\n      const handleStepData = (stepData) => {\n        setPayload({...payload, [activeStep]: stepData}); \n        handleNext();\n      }\n      const cancelStep = () => {\n        handleBack();\n      }\n      \n      const steps = getSteps();\n\n      const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      };\n\n      const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n      };\n\n    return (\n        <div style={{height: \"calc(95vh)\"}}>\n            <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map((label, index) => (\n                  <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                  </Step>\n                ))}\n              </Stepper>\n            {getStepContent(activeStep)}\n        </div>\n    );\n} \n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { toLocalTime } from '../../utilities/Time';\nimport { meState } from '../../../cache';\nimport {useReactiveVar} from '@apollo/client';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport {ThemeContext} from 'styled-components';\nimport { useContext} from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n}));\n\nexport function EventFeedTableEvents(props){\n    const classes = useStyles();\n    const theme = useContext(ThemeContext);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const me = useReactiveVar(meState);\n    const handleClose = () => {\n        setAnchorEl(null);\n      };\n    const getErrorState =() =>{\n        return props.level === \"warning\" && !props.resolved;\n    }\n    const getResolvedState = () => {\n        return props.level === \"warning\" && props.resolved;\n    }\n    const onUpdateResolution = () => {\n        props.onUpdateResolution(props.id, !props.resolved);\n        handleClose();\n    }\n    const onUpdateDeleted = () => {\n        props.onUpdateDeleted(props.id);\n        handleClose();\n    }\n    const onUpdateLevel = () => {\n        props.onUpdateLevel(props.id);\n        handleClose();\n    }\n    return (\n            <ListItem alignItems=\"flex-start\" style={{backgroundColor: getResolvedState() ? theme.successColor : (getErrorState() ? theme.errorColor : \"\")}}>\n                <ListItemAvatar>\n                    <Avatar>\n                        {props.operator ? props.operator.username[0] : \"M\"}\n                    </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body1\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                            style={{fontWeight: \"bold\"}}\n                          >\n                            {props.operator ? props.operator.username : \"Mythic\"}\n                          </Typography>\n                          <Typography\n                            component=\"span\"\n                            variant=\"caption\"\n                            className={classes.inline}\n                            color=\"textSecondary\"\n                            style={{marginLeft: \"10px\"}}\n                            >\n                            {toLocalTime(props.timestamp, me.user.view_utc_time)}\n                            </Typography>\n                        </React.Fragment>\n                    }\n                    secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body1\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                            style={{\"overflowWrap\": \"break-word\"}}\n                          >\n                            {props.message}\n                          </Typography>\n                        </React.Fragment>\n                    \n                    }\n                />\n                <ListItemSecondaryAction>\n                    <IconButton aria-controls={\"eventmenu\" + props.id} aria-haspopup=\"true\" onClick={(e)=>{setAnchorEl(e.currentTarget)}}><MoreVertIcon/></IconButton>\n                        <Menu elevation={5} id={\"eventmenu\" + props.id} anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose} >\n                            {\n                            getResolvedState() ? (\n                                <MenuItem onClick={onUpdateResolution}>Unresolve</MenuItem>\n                            ) : ( getErrorState() ? (\n                                <MenuItem onClick={onUpdateResolution}>Resolve</MenuItem>\n                                ) : (\n                                <MenuItem onClick={onUpdateLevel}>Make Warning</MenuItem>\n                                )\n                            \n                            )\n                            }\n                            <MenuItem onClick={onUpdateDeleted}><DeleteIcon/>Delete</MenuItem>\n                        </Menu>\n                  </ListItemSecondaryAction>\n            </ListItem>\n        )\n}\n\n","import React, { useEffect, useRef } from 'react';\nimport { EventFeedTableEvents } from './EventFeedTableEvents';\nimport Typography from '@material-ui/core/Typography';\nimport SendIcon from '@material-ui/icons/Send';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport {TextField} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport {ThemeContext} from 'styled-components';\nimport { useContext} from 'react';\n\nexport function EventFeedTable(props){\n    const messagesEndRef = useRef(null)\n    const theme = useContext(ThemeContext);\n    const [message, setMessage] = React.useState(\"\");\n    const onMessageChange = (evt) => {\n        evt.preventDefault();\n        setMessage(evt.target.value);\n    }\n    const onSubmitMessage = (e) => {\n        e.preventDefault();\n        if(message && message.length > 0){\n            props.onSubmitMessage(\"info\", message);\n            setMessage(\"\");\n        }\n    } \n    const scrollToBottom = () => {\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\n      }\n    const subscribeToMoreMessages = () => {\n        props.subscribeToMoreMessages();\n    }\n    useEffect( () => {\n        messagesEndRef.current.scrollIntoView();\n        subscribeToMoreMessages();\n        \n    }, []);\n    useEffect(scrollToBottom, [props.operationeventlog]);\n    return (\n    <React.Fragment>\n        <Typography variant=\"h4\" style={{textAlign: \"left\"}}>\n        Operational Event Messages\n        </Typography>\n        <Paper elevation={5} style={{position: \"relative\", height: \"calc(90vh)\", backgroundColor: theme.body}}>\n             <List style={{height: \"calc(84vh)\", overflow: \"auto\", maxWidth: \"100%\"}} dense>\n                {props.operationeventlog.map( (op) => (\n                        <EventFeedTableEvents\n                            onDeleteOperator={props.onDeleteOperator}\n                            key={\"event\" + op.id}\n                            onUpdateResolution={props.onUpdateResolution}\n                            onUpdateLevel={props.onUpdateLevel}\n                            onUpdateDeleted={props.onUpdateDeleted}\n                            {...op}\n                        />\n                    ))}\n                    <div ref={messagesEndRef} />\n             </List>\n            \n            <div style={{padding: \"0\", margin: \"0\", position: \"absolute\", bottom: 0, width: \"100%\"}}>\n                <form onSubmit={onSubmitMessage}>\n                    <TextField InputProps={{endAdornment:\n                        <IconButton color=\"primary\" variant=\"contained\" onClick={onSubmitMessage}>\n                            <SendIcon/>\n                        </IconButton>\n                        }} \n                        fullWidth\n                        size=\"small\"\n                        style={{padding:0,margin:0}}\n                        variant=\"outlined\"\n                        value={message} onChange={onMessageChange}\n                        label=\"Type Message...\" \n                    />\n                </form>\n            </div>  \n        </Paper>\n    </React.Fragment>\n    )\n}\n\n","import React  from 'react';\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport { useReactiveVar } from '@apollo/client';\nimport { meState } from '../../../cache';\nimport {EventFeedTable} from './EventFeedTable';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n\nconst GET_Event_Feed = gql`\nquery GetOperationEventLogs($operation_id: Int!) {\n  operationeventlog(where: {operation_id: {_eq: $operation_id}, deleted: {_eq: false}}, order_by: {timestamp: asc}) {\n    id\n    level\n    message\n    resolved\n    timestamp\n    operator {\n      username\n    }\n  }\n}\n `;\n const Create_Operational_Event_Log = gql`\nmutation CreateOperationEventLog($operation_id: Int!, $message: String!, $level: String!, $operator_id: Int!) {\n  insert_operationeventlog_one(object:{level: $level, message: $message, operation_id: $operation_id, operator_id: $operator_id}) {\n    id\n  }\n}\n `;\nconst Update_Resolution = gql`\nmutation UpdateResolutionOperationEventLog($id: Int!, $resolved: Boolean!) {\n  update_operationeventlog(where:{id: {_eq: $id}}, _set: {resolved: $resolved}) {\n    returning{\n        id\n        resolved\n    }\n  }\n}\n `;\nconst Update_Level = gql`\nmutation UpdateLevelOperationEventLog($id: Int!) {\n  update_operationeventlog(where:{id: {_eq: $id}}, _set: {level: \"warning\"}) {\n    returning{\n        id\n        level\n    }\n  }\n}\n `;\n const Update_Deleted = gql`\nmutation UpdateDeletedOperationEventLog($id: Int!) {\n  update_operationeventlog(where:{id: {_eq: $id}}, _set: {deleted: true}) {\n    returning{\n        id\n        deleted\n    }\n  }\n}\n `;\n const SUB_Event_Feed = gql`\nsubscription OperationEventLogSubscription($operation_id: Int!) {\n  operationeventlog(where: {deleted: {_eq: false}, operation_id: {_eq: $operation_id}}, limit: 1, order_by: {timestamp: desc}) {\n    id\n    level\n    message\n    resolved\n    timestamp\n    operator {\n      username\n    }\n  }\n}\n `;\nexport function EventFeed(props){\n    const me = useReactiveVar(meState);\n    const { loading, error, data, subscribeToMore } = useQuery(GET_Event_Feed, {variables: {operation_id: me.user.current_operation_id}});\n    const [newOperationEventLog] = useMutation(Create_Operational_Event_Log);\n    const [updateResolution] = useMutation(Update_Resolution);\n    const [updateLevel] = useMutation(Update_Level);\n    const [updateDeleted] = useMutation(Update_Deleted, {\n        update: (cache, {data}) => {\n            const existingMessages = cache.readQuery({query: GET_Event_Feed, variables: {operation_id: me.user.current_operation_id}});\n            const removedMessage = data.update_operationeventlog.returning[0];\n            const newFinalMessages = existingMessages.operationeventlog.filter(op => (op.id !== removedMessage.id));\n            cache.writeQuery({\n                query: GET_Event_Feed,\n                variables: {operation_id: me.user.current_operation_id},\n                data: {operationeventlog: newFinalMessages}\n            });\n        }\n    });\n    const onUpdateResolution = (id, resolved) => {\n        updateResolution({variables: {id, resolved}});\n    }\n    const onUpdateLevel = (id) => {\n        updateLevel({variables: {id}});\n    }\n    const onUpdateDeleted = (id) => {\n        updateDeleted({variables: {id}});\n    }\n    const onSubmitMessage = (level, message) => {\n        newOperationEventLog({variables: {operation_id: me.user.current_operation_id, level, message, operator_id: me.user.id}});\n    }\n    if (loading) {\n     return <LinearProgress />;\n    }\n    if (error) {\n     console.error(error);\n     return null;\n    }\n    return (\n        <EventFeedTable onSubmitMessage={onSubmitMessage} {...data} subscribeToMoreMessages={() => subscribeToMore({\n            document: SUB_Event_Feed,\n            variables: {operation_id: me.user.current_operation_id},\n            updateQuery: (prev, {subscriptionData} ) => {\n                //console.log(\"in subscription\", subscriptionData);\n                if(!subscriptionData.data) return prev;\n                const exists = prev.operationeventlog.find(\n                  ({ id }) => id === subscriptionData.data.operationeventlog[0].id\n                );\n                if (exists) return prev;\n                //console.log(\"subscribeToMore data:\", subscriptionData.data.operationeventlog);\n                //console.log(\"subscribeToMore prev:\", prev);\n                \n                return Object.assign({}, prev, {\n                    operationeventlog: [...prev.operationeventlog, subscriptionData.data.operationeventlog[0]]\n                });\n            }\n        })}\n        onUpdateResolution={onUpdateResolution}\n        onUpdateLevel={onUpdateLevel}\n        onUpdateDeleted={onUpdateDeleted}\n        />\n    );\n}\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport Typography from '@material-ui/core/Typography';\nimport { toLocalTime } from '../../utilities/Time';\nimport {useQuery, gql} from '@apollo/client';\nimport { meState } from '../../../cache';\nimport {useReactiveVar} from '@apollo/client';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst GET_Payload_Details = gql`\nquery GetPayloadDetails($payload_id: Int!, $operation_id: Int!) {\n  payload(where: {id: {_eq: $payload_id}, operation_id: {_eq: $operation_id}}) {\n    uuid\n    payloadcommands {\n      id\n      version\n      command {\n        cmd\n        id\n        version\n      }\n    }\n    filemetum {\n      filename\n      agent_file_id\n      id\n      md5\n      sha1\n    }\n    buildparameterinstances {\n      parameter\n      id\n      buildparameter {\n        description\n      }\n    }\n    c2profileparametersinstances(order_by: {c2profile: {name: asc}}) {\n      value\n      c2profileparameter {\n        description\n      }\n      c2profile {\n        name\n      }\n    }\n  }\n}\n`;\nexport function DetailedPayloadTable(props){\n    const me = useReactiveVar(meState);\n    const [commands, setCommands] = React.useState([]);\n    const [buildParameters, setBuildParameters] = React.useState([]);\n    const [c2Profiles, setC2Profiles] = React.useState([]);\n    const { loading, error, data } = useQuery(GET_Payload_Details, {\n        variables: {payload_id: props.payload_id, operation_id: me.user.current_operation_id},\n        onCompleted: data => {\n            const commandState = data.payload[0].payloadcommands.map( (c) => \n            { \n                return {cmd: c.command.cmd, mythic: c.command.version, payload: c.version} \n            }).sort((a,b) => (a.cmd > b.cmd) ? 1: ((b.cmd > a.cmd) ? -1 : 0));\n            setCommands(commandState);\n            const buildParametersState = data.payload[0].buildparameterinstances.map( (b) =>\n            {\n                return {description: b.buildparameter.description, value: b.parameter}\n            }).sort((a,b) => (a.description > b.description) ? 1: ((b.description > a.description) ? -1 : 0));\n            setBuildParameters(buildParametersState);\n            const c2Profiles = data.payload[0].c2profileparametersinstances.reduce( (prev, cur) => {\n                if( !(cur.c2profile.name in prev) ){\n                    return {...prev, [cur.c2profile.name]: [{description: cur.c2profileparameter.description, value: cur.value}]}\n                }\n                return {...prev, [cur.c2profile.name]: [...prev[cur.c2profile.name], {description: cur.c2profileparameter.description, value: cur.value}]}\n            }, {});\n            const c2ProfilesState = Object.keys(c2Profiles).reduce( (prev, cur) => {\n                return [...prev, {\n                    c2_profile: cur,\n                    parameters: c2Profiles[cur].sort((a,b) => (a.description > b.description) ? 1: ((b.description > a.description) ? -1 : 0))\n                }];\n            }, []);\n            setC2Profiles(c2ProfilesState);\n        }\n        });\n    if (loading) {\n     return <LinearProgress />;;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    return (\n        <React.Fragment>\n        <Typography variant=\"h6\" gutterBottom component=\"div\" style={{display: \"inline-block\"}}>\n            Payload Information\n            </Typography>\n            <Table size=\"small\" aria-label=\"details\" style={{\"tableLayout\": \"fixed\", \"overflowWrap\": \"break-word\"}}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Payload Info</TableCell>\n                    <TableCell>Value</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell>UUID</TableCell>\n                        <TableCell>{data.payload[0].uuid}</TableCell>\n                    </TableRow>\n                    { data.payload[0].filemetum ? (\n                        <TableRow key={'filename'}>\n                            <TableCell>Filename</TableCell>\n                            <TableCell>{data.payload[0].filemetum.filename}</TableCell>\n                        </TableRow>\n                        \n                    ) : null }\n\n                    <TableRow>\n                        <TableCell>Download URL</TableCell>\n                        <TableCell>{window.location.origin + \"/direct/download/\" + data.payload[0].filemetum.agent_file_id}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>SHA1</TableCell>\n                        <TableCell>{data.payload[0].filemetum.sha1}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>MD5</TableCell>\n                        <TableCell>{data.payload[0].filemetum.md5}</TableCell>\n                    </TableRow>\n                </TableBody>\n              </Table>\n        <Typography variant=\"h6\" gutterBottom component=\"div\" style={{display: \"inline-block\"}}>\n            Loaded Commands\n        </Typography>\n        <Table size=\"small\" aria-label=\"details\" style={{\"tableLayout\": \"fixed\", \"overflowWrap\": \"break-word\"}}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Command Name</TableCell>\n                <TableCell>Mythic Version</TableCell>\n                <TableCell>Loaded Version</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                commands.map( (cmd) => (\n                    <TableRow key={cmd.cmd + props.payload_id}>\n                        <TableCell>{cmd.cmd}</TableCell>\n                        <TableCell>{cmd.mythic}</TableCell>\n                        <TableCell>{cmd.payload}</TableCell>\n                    </TableRow>\n                ))\n                \n              }\n            </TableBody>\n          </Table>\n          <Typography variant=\"h6\" gutterBottom component=\"div\" style={{display: \"inline-block\"}}>\n            Build Parameters\n            </Typography>\n            <Table size=\"small\" aria-label=\"details\" style={{\"tableLayout\": \"fixed\", \"overflowWrap\": \"break-word\"}}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Parameter</TableCell>\n                    <TableCell>Value</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    buildParameters.map( (cmd, i) => (\n                        <TableRow key={\"buildprop\" + i + \"for\" + props.payload_id}>\n                            <TableCell>{cmd.description}</TableCell>\n                            <TableCell>{cmd.value}</TableCell>\n                        </TableRow>\n                    ))\n                    \n                  }\n                </TableBody>\n              </Table>\n            { c2Profiles.map( (c2) => (\n                <React.Fragment key={\"c2frag\" + props.payload_id + c2.c2_profile}>\n                <Typography variant=\"h6\" gutterBottom component=\"div\" style={{display: \"inline-block\"}}>\n                    {c2.c2_profile}\n                    </Typography>\n                    <Table size=\"small\" aria-label=\"details\" style={{\"tableLayout\": \"fixed\", \"overflowWrap\": \"break-word\"}}>\n                        <TableHead>\n                          <TableRow>\n                            <TableCell>Parameter</TableCell>\n                            <TableCell>Value</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {\n                            c2.parameters.map( (cmd, j) => (\n                                <TableRow key={\"c2frag\" + props.payload_id + c2.c2_profile + j}>\n                                    <TableCell>{cmd.description}</TableCell>\n                                    <TableCell>{cmd.value}</TableCell>\n                                </TableRow>\n                            ))\n                            \n                          }\n                        </TableBody>\n                      </Table>\n                  </React.Fragment>\n            ))}\n            \n        </React.Fragment>\n        )\n}\n\n","import React from 'react';\nimport {Button} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { MythicDialog } from '../../MythicComponents/MythicDialog';\nimport { toLocalTime } from '../../utilities/Time';\nimport { meState } from '../../../cache';\nimport {useReactiveVar} from '@apollo/client';\nimport {DetailedPayloadTable} from './DetailedPayloadTable';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ErrorIcon from '@material-ui/icons/Error';\n\nexport function PayloadsTableRow(props){\n    const [open, setOpen] = React.useState(false);\n    const [openUpdate, setOpenUpdateDialog] = React.useState(false);\n    const [openDelete, setOpenDeleteDialog] = React.useState(false);\n    const me = useReactiveVar(meState);\n\n    const onAlertChanged = (evt) => {\n        const {id} = props;\n        props.onAlertChanged(id, !props[evt.target.name]);\n    }\n    const onAccept = (id, username, passwordOld, passwordNew) => {\n        console.log(\"settingsoperator onAccept\", id, username, passwordOld, passwordNew);\n    }\n    const onAcceptDelete = (id) => {\n        props.onDeleteOperator(id);\n        setOpenDeleteDialog(false);\n    }\n    return (\n        <React.Fragment>\n            <TableRow key={props.id}>\n                <TableCell>\n                <IconButton size=\"small\" onClick={()=>{setOpenDeleteDialog(true);}} color=\"secondary\" variant=\"contained\"><DeleteIcon/></IconButton>\n\n                </TableCell>\n                <TableCell>{toLocalTime(props.creation_time, me.user.view_utc_time)}</TableCell>\n                <TableCell><Button size=\"small\" onClick={()=>{setOpenUpdateDialog(true);}} color=\"primary\" variant=\"contained\">Actions</Button>\n\n                </TableCell>\n                <TableCell>\n                    <Switch\n                        checked={props.callback_alert}\n                        onChange={onAlertChanged}\n                        color=\"primary\"\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                        name=\"callback_alert\"\n                      />\n                </TableCell>\n                <TableCell>\n                    {props.build_phase === \"success\" ?\n                        ( <IconButton variant=\"contained\" target=\"_blank\" color=\"primary\" href={window.location.origin + \"/direct/download/\" + props.filemetum.agent_file_id} download><GetAppIcon /></IconButton>\n                        )\n                        : \n                        (props.build_phase === \"building\" ? \n                        (<CircularProgress size={20} thickness={4} />) : \n                        (<ErrorIcon />) \n                        )\n                    }\n                </TableCell>\n                <TableCell>{props.filemetum.filename}</TableCell>\n                <TableCell>{props.tag}</TableCell>\n                <TableCell>\n                    {props.payloadtype.ptype}\n                </TableCell>\n                <TableCell>\n                    <IconButton size=\"small\" aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                        {open ? <KeyboardArrowUpIcon className=\"mythicElement\"/> : <KeyboardArrowDownIcon className=\"mythicElement\"/>}\n                      </IconButton>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n            <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={9}>\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <Box margin={1}>\n                  <DetailedPayloadTable {...props} payload_id={props.id} />\n                </Box>\n              </Collapse>\n            </TableCell>\n          </TableRow>\n        </React.Fragment>\n        )\n}\n\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { PayloadsTableRow } from './PayloadsTableRow';\n\n\nexport function PayloadsTable(props){\n    return (\n        <TableContainer component={Paper} className=\"mythicElement\">\n            <Typography variant=\"h3\" align=\"left\" id=\"SettingsTable\" component=\"div\" \n            style={{\"display\": \"inline-block\", \"float\": \"left\", \"marginLeft\": \"10px\"}}>\n              Payloads\n            </Typography>    \n            <Table size=\"small\" style={{\"tableLayout\": \"fixed\", \"maxWidth\": \"100%\", \"overflow\": \"scroll\"}}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell style={{width: \"2rem\"}}> Delete</TableCell>\n                        <TableCell style={{width: \"12rem\"}}>Timestamp</TableCell>\n                        <TableCell style={{width: \"4rem\"}}>Modify</TableCell>\n                        <TableCell style={{width: \"6rem\"}}>Alert on New</TableCell>\n                        <TableCell style={{width: \"4rem\"}}>Download</TableCell>\n                        <TableCell>File</TableCell>\n                        <TableCell>Description</TableCell>\n                        <TableCell style={{width: \"8rem\"}}>Payload Type</TableCell>\n                        <TableCell style={{width: \"4rem\"}}>More...</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                \n                {props.payload.map( (op) => (\n                    <PayloadsTableRow\n                        onDeletePayload={props.onDeletePayload}\n                        onUpdateCallbackAlert={props.onUpdateCallbackAlert}\n                        key={\"payload\" + op.id}\n                        {...op}\n                    />\n                ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\n","import React from 'react';\nimport { PayloadsTable } from './PayloadsTable';\nimport {useMutation, useQuery, gql} from '@apollo/client';\nimport { meState } from '../../../cache';\nimport {useReactiveVar} from '@apollo/client';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst GET_Payloads = gql`\nquery GetPayloadsQuery($operation_id: Int!) {\n  payload(where: {deleted: {_eq: false}, operation_id: {_eq: $operation_id}}) {\n    auto_generated\n    build_message\n    build_phase\n    callback_alert\n    creation_time\n    id\n    operator {\n      id\n      username\n    }\n    uuid\n    tag\n    payloadtype {\n      id\n      ptype\n    }\n    filemetum {\n      agent_file_id\n      filename\n      id\n    }\n  }\n}\n\n`;\n\nconst payloadsDelete = gql`\nmutation PayloadsDeletePayloadMutation($id: Int!) {\n  update_payload(where: {id: {_eq: $id}}, _set: {deleted: true}) {\n    returning {\n      id\n    }\n  }\n}\n`;\nconst payloadsCallbackAlert = gql`\nmutation PayloadsCallbackAlertMutation($id: Int!, $callback_alert: Boolean!) {\n  update_payload(where: {id: {_eq: $id}}, _set: {callback_alert: $callback_alert}) {\n    returning {\n      id\n      callback_alert\n    }\n  }\n}\n`;\n\nexport function Payloads(props){\n    const me = useReactiveVar(meState);\n    const { loading, error, data } = useQuery(GET_Payloads, {variables: {operation_id: me.user.current_operation_id}});\n\n    const [deletePayload] = useMutation(payloadsDelete, {\n        update: (cache, {data}) => {\n            const existing = cache.readQuery({query: GET_Payloads, variables: {operation_id: me.user.current_operation_id}});\n            const removed = data.payload.returning[0];\n            const newFinal = existing.payload.filter(op => (op.id !== removed.id));\n            cache.writeQuery({\n                query: GET_Payloads,\n                data: {payload: newFinal},\n                variables: {operation_id: me.current_operation_id}\n            });\n        }\n    });\n    const [callbackAlert] = useMutation(payloadsCallbackAlert, {\n        update: (cache, {data}) => {\n        }\n    });\n\n    const onDeletePayload = (id) => {\n        deletePayload({variables: {id}});\n    }\n    const onUpdateCallbackAlert = (id, callback_alert) => {\n        callbackAlert({variables: {id, callback_alert}});\n    }\n    if (loading) {\n     return <LinearProgress />;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    return (\n    <div style={{height: \"calc(94vh)\", marginTop:\"10px\"}}>\n        <PayloadsTable \n            onDeletePayload={onDeletePayload} onUpdateCallbackAlert={onUpdateCallbackAlert}\n            {...data} />\n        </div>\n    );\n} \n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: `99%`,\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport function QuickStartCard() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root} elevation={5}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            S\n          </Avatar>\n        }\n        title=\"Mythic Quick Start\"\n        subheader=\"Creating Payloads and Getting Callbacks\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          This sections walks through how to generate a payload, download the payload, get a callback, and interact with it.\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\n            minutes.\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { QuickStartCard } from './QuickStartCard';\n\nexport function Home() {\n\n  return (\n  <div style={{maxHeight: \"calc(96vh)\", margin:\"10px\"}}>\n    <QuickStartCard />\n  </div>\n  );\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport React from 'react';\nimport { useReactiveVar } from '@apollo/client';\nimport { meState } from '../../cache';\n\n\nexport function LoggedInRoute({component, ...rest}){\n    const me = useReactiveVar(meState);\n    return (\n        <Route {...rest} render={(props) => (\n            me.loggedIn ? (\n                //logged in\n                React.createElement(component, props)\n            ) : (\n                //not logged in\n                <Redirect to={{ \n                    pathname: '/new/login',\n                    state: { from: props.location }\n                }} />\n            )\n        )} />\n    )\n}\n","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {useQuery, gql} from '@apollo/client';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst GET_C2_Details = gql`\nquery GetPC2Details($payload_name: String!) {\n  c2profile(where: {name: {_eq: $payload_name}}) {\n    c2profileparameters(where: {deleted: {_eq: false}}) {\n      default_value\n      description\n      format_string\n      name\n      parameter_type\n      id\n      randomize\n      required\n      verifier_regex\n    }\n  }\n}\n`;\n\nexport function C2ProfileBuildDialog(props) {\n    const [buildParams, setBuildParams] = useState([]);\n    const { loading, error } = useQuery(GET_C2_Details, {\n        variables: {payload_name: props.payload_name},\n        onCompleted: data => {\n            setBuildParams(data.c2profile[0].c2profileparameters);\n        }\n        });\n    if (loading) {\n     return <LinearProgress />;;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n  \n  return (\n    <React.Fragment>\n        <DialogTitle id=\"form-dialog-title\">{props.payload_name}'s Build Parameters</DialogTitle>\n        <DialogContent dividers={true}>\n          <DialogContentText>\n            These are the build parameters associated with this payload\n          </DialogContentText>\n            <Table size=\"small\" aria-label=\"details\" style={{\"tableLayout\": \"fixed\", \"overflowWrap\": \"break-word\"}}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Parameter</TableCell>\n                    <TableCell>Value</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    buildParams.map( (param) => (\n                        <TableRow key={\"buildprop\" + param.id}>\n                            <TableCell>{param.description}</TableCell>\n                            <TableCell>\n                            Scripting/Building Name:<br/>{param.name}<br/>\n                            Parameter Type:<br/>{param.parameter_type}<br/>\n                            Default Parameter:<br/>{param.default_value}<br/>\n                            Required value?<br/>{param.required ? \"Yes\": \"No\"}<br/>\n                            Verifier Regex:<br/>{param.verifier_regex}<br/>\n                            Randomize value?: <br/>{param.randomize ? \"Yes\" : \"No\" }<br/>\n                            Random Format String: <br/>{param.format_string}<br/>\n                            </TableCell>\n                        </TableRow>\n                    ))\n                    \n                  }\n                </TableBody>\n              </Table>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.onClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n  </React.Fragment>\n  );\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MythicTextField from '../../MythicComponents/MythicTextField';\nimport {useQuery, gql} from '@apollo/client';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst getProfileOutputQuery = gql`\nquery getProfileOutput($id: Int!) {\n  getProfileOutput(id: $id) {\n    status\n    error\n    output\n  }\n}\n`;\n\nexport function C2ProfileOutputDialog(props) {\n    const { loading, error, data } = useQuery(getProfileOutputQuery, {\n        variables: {id: props.profile_id},\n        onCompleted: data => {\n            \n        },\n        fetchPolicy: \"network-only\"\n    });\n    if (loading) {\n     return <LinearProgress />;;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n  \n  return (\n    <React.Fragment>\n        <DialogTitle id=\"form-dialog-title\">{props.payload_name}'s Current Stdout/Stderr</DialogTitle>\n        <DialogContent dividers={true}>\n          <DialogContentText>\n            This is the current Stdout/Stderr for the profile. This goes away once you close this dialog.\n          </DialogContentText>\n            <MythicTextField multiline={true} onChange={()=>{return}} value={data.getProfileOutput.output} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.onClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n  </React.Fragment>\n  );\n}\n\n","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MythicTextField from '../../MythicComponents/MythicTextField';\nimport {useQuery, gql} from '@apollo/client';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst getProfileConfigQuery = gql`\nquery getProfileConfigOutput($id: Int!, $filename: String!) {\n  downloadContainerFile(id: $id, filename: $filename) {\n    status\n    error\n    filename\n    data\n  }\n}\n`;\n\nexport function C2ProfileConfigDialog(props) {\n    const [config, setConfig] = useState(\"\");\n    const { loading, error } = useQuery(getProfileConfigQuery, {\n        variables: {id: props.profile_id, filename: \"config.json\"},\n        onCompleted: data => {\n            if(data.downloadContainerFile.status === \"error\"){\n                setConfig(\"Errored trying to read file from container\\n\" + data.downloadContainerFile.error);\n            }else{\n                setConfig(atob(data.downloadContainerFile.data));\n            }\n        },\n        fetchPolicy: \"network-only\"\n    });\n    \n    if (loading) {\n     return <LinearProgress />;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    const onConfigSubmit = () => {\n        props.onConfigSubmit(btoa(config));\n        props.onClose();\n    }\n    const onChange = (name, value, error) => {\n        setConfig(value);\n    }\n  \n  return (\n    <React.Fragment>\n        <DialogTitle id=\"form-dialog-title\">{props.payload_name}'s Current Configuration</DialogTitle>\n        <DialogContent dividers={true}>\n            <MythicTextField multiline={true} onChange={onChange} value={config} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.onClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={onConfigSubmit} color=\"secondary\">\n            Submit\n          </Button>\n        </DialogActions>\n  </React.Fragment>\n  );\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MythicTextField from '../../MythicComponents/MythicTextField';\n\n\nexport function C2ProfileStartStopOutputDialog(props) {\n  return (\n    <React.Fragment>\n        <DialogTitle id=\"form-dialog-title\">{props.payload_name}'s Current Stdout/Stderr</DialogTitle>\n        <DialogContent dividers={true}>\n          <DialogContentText>\n            This is the current Stdout/Stderr for the profile. This goes away once you close this dialog.\n          </DialogContentText>\n            <MythicTextField multiline={true} value={props.output} onChange={() => {return}} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.onClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n  </React.Fragment>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Badge from '@material-ui/core/Badge';\nimport {C2ProfileBuildDialog} from './C2ProfileBuildDialog';\nimport { MythicDialog } from '../../MythicComponents/MythicDialog';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport {useMutation, gql} from '@apollo/client';\nimport { useSnackbar } from 'notistack';\nimport InsertLinkTwoToneIcon from '@material-ui/icons/InsertLinkTwoTone';\nimport {C2ProfileOutputDialog} from './C2ProfileOutputDialog';\nimport {C2ProfileConfigDialog} from './C2ProfileConfigDialog';\nimport {C2ProfileStartStopOutputDialog} from './C2ProfileStartStopOutputDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n    margin: \"10px\"\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  running: {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n  },\n  notrunning: {\n    backgroundColor: 'red',\n    color: 'red',\n  },\n}));\nconst StyledAvatar = withStyles((theme) => ({\n    badge: {\n        boxShadow: \"0 0 0 2px white\",\n        '&::after': {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          borderRadius: '50%',\n          animation: '$ripple 1.2s infinite ease-in-out',\n          border: '1px solid currentColor',\n          content:'\"\"'\n        },\n      },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}))(Badge);\nconst startStopProfileMutation = gql`\nmutation StartStopProfile($id: Int!, $action: String) {\n  startStopProfile(id: $id, action: $action) {\n    status\n    error\n    output\n  }\n}\n`;\nconst setProfileConfigMutation = gql`\nmutation setProfileConfiguration($id: Int!, $file_path: String!, $data: String!) {\n  uploadContainerFile(id: $id, file_path: $file_path, data: $data) {\n    status\n    error\n    filename\n  }\n}\n`;\nexport function C2ProfilesCard(props) {\n  const classes = useStyles();\n  let date = new Date();\n  let now = date.getTime() + date.getTimezoneOffset() * 60000;\n  let heartbeat = new Date(props.last_heartbeat);\n  let difference = (now - heartbeat.getTime()) / 1000;\n  const running = difference < 30 ? 'running' : 'notrunning';\n  const [openBuildingDialog, setOpenBuildingDialog] = React.useState(false);\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\n  const dropdownAnchorRef = React.useRef(null);\n  const { enqueueSnackbar } = useSnackbar();\n  const handleDropdownToggle = () => {\n    setDropdownOpen((prevOpen) => !prevOpen);\n  };\n  const handleDropdownClose = (event) => {\n    if (dropdownAnchorRef.current && dropdownAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setDropdownOpen(false);\n  };\n  const [startStopProfile] = useMutation(startStopProfileMutation, {\n        update: (cache, {data}) => {\n            \n        },\n        onError: data => {\n            enqueueSnackbar(data.message, {variant: \"error\"} );\n            console.log(data);\n        },\n        onCompleted: data => {\n            setOutput(data.startStopProfile.output);\n            setOpenProfileStartStopDialog(true);\n        }\n    });\n    const onStartStopProfile = () => {\n        if(props.running){\n            enqueueSnackbar(\"Submitting stop task...\", {variant: \"info\"} );\n        }else{\n            enqueueSnackbar(\"Submitting start task...\", {variant: \"info\"} );\n        }  \n        startStopProfile({variables: {id: props.id, action: props.running ? \"stop\" : \"start\"}});\n    }\n    const [openProfileDialog, setOpenProfileDialog] = React.useState(false);\n    const [openProfileConfigDialog, setOpenProfileConfigDialog] = React.useState(false);\n    const [output, setOutput] = React.useState(\"\");\n    const [openProfileStartStopDialog, setOpenProfileStartStopDialog] = React.useState(false);\n    const [configSubmit] = useMutation(setProfileConfigMutation, {\n        update: (cache, {data}) => {\n            \n        },\n        onError: data => {\n            enqueueSnackbar(data.message, {variant: \"error\"} );\n            console.log(data);\n        },\n        onCompleted: data => {\n            //console.log(data);\n            if(data.uploadContainerFile.status === \"success\"){\n                enqueueSnackbar(\"Updated file\", {variant: \"success\"} );\n            }else{\n                enqueueSnackbar(\"Error updating: \" + data.uploadContainerFile.error, {variant: \"error\"} );\n            }\n        }\n    });\n    const onConfigSubmit = (content) => {\n        configSubmit({variables: {id: props.id, file_path: \"config.json\", data: content}});\n    }\n  return (\n    <Card className={classes.root} elevation={5} style={{maxWidth: \"99%\"}}>\n        <div>\n        <StyledAvatar overlap=\"circle\" classes={{badge: classes[running]}} invisible={false} anchorOrigin={{vertical: \"bottom\", horizontal: \"right\"}}>\n            {props.is_p2p ? \n            (<React.Fragment><InsertLinkTwoToneIcon fontSize=\"large\"/><InsertLinkTwoToneIcon fontSize=\"large\"/></React.Fragment>)\n            : \n            (<WifiIcon fontSize=\"large\"/>)\n            }\n\n        </StyledAvatar>\n        </div>\n      <div>\n        <Typography variant=\"h4\" component=\"h1\" style={{textAlign:\"left\", marginLeft: \"10px\"}}>{props.name}</Typography>\n        <CardContent style={{textAlign:\"left\"}}>\n            <Typography variant=\"body1\" component=\"p\">\n              <b>Author:</b> {props.author}\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\">\n              <b>Supported Agents:</b> {props.payloadtypec2profiles.map( (pt) => (pt.payloadtype.ptype + \" \") )}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {props.description}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n            { props.translation_container ? (\n                <Typography variant=\"body1\" component=\"p\">\n                  <b>Translation Container:</b> {props.translation_container}\n                </Typography>\n            ) : (null)\n            }\n              \n            </Typography>\n        </CardContent>\n        <CardActions >\n            <Button size=\"small\" color=\"primary\" href={\"/docs/c2-profiles/\" + props.name.toLowerCase()} target=\"_blank\">\n              Docs\n            </Button>\n            <Button size=\"small\" onClick={()=>{setOpenBuildingDialog(true);}} color=\"primary\" variant=\"contained\">Build Info</Button>\n                <MythicDialog fullWidth={true} maxWidth=\"lg\" open={openBuildingDialog} \n                    onClose={()=>{setOpenBuildingDialog(false);}} \n                    innerDialog={<C2ProfileBuildDialog {...props} onClose={()=>{setOpenBuildingDialog(false);}} payload_name={props.name} />}\n                />\n                <MythicDialog fullWidth={true} maxWidth=\"lg\" open={openProfileStartStopDialog} \n                    onClose={()=>{setOpenProfileStartStopDialog(false);}} \n                    innerDialog={<C2ProfileStartStopOutputDialog output={output} onClose={()=>{setOpenProfileStartStopDialog(false);}} payload_name={props.name} />}\n                />\n             <ButtonGroup variant=\"contained\" color={props.running ? \"primary\" : \"secondary\"} ref={dropdownAnchorRef} aria-label=\"split button\">\n             {\n                props.running ?\n                (\n                    <Button size=\"small\" onClick={onStartStopProfile}>Stop Profile</Button>\n                )\n                :\n                (\n                    <Button size=\"small\" onClick={onStartStopProfile}>Start Profile</Button>\n                )\n             }\n             <Button\n                size=\"small\"\n                aria-controls={dropdownOpen ? 'split-button-menu' : undefined}\n                aria-expanded={dropdownOpen ? 'true' : undefined}\n                aria-label=\"select merge strategy\"\n                aria-haspopup=\"menu\"\n                onClick={handleDropdownToggle}\n              >\n                <ArrowDropDownIcon />\n              </Button>\n            </ButtonGroup>\n            <MythicDialog fullWidth={true} maxWidth=\"lg\" open={openProfileDialog} \n                onClose={()=>{setOpenProfileDialog(false);}} \n                innerDialog={<C2ProfileOutputDialog {...props} payload_name={props.name} onClose={()=>{setOpenProfileDialog(false);}} profile_id={props.id} />}\n            />\n            <MythicDialog fullWidth={true} maxWidth=\"lg\" open={openProfileConfigDialog} \n                onClose={()=>{setOpenProfileConfigDialog(false);}} \n                innerDialog={<C2ProfileConfigDialog {...props} onConfigSubmit={onConfigSubmit} payload_name={props.name} onClose={()=>{setOpenProfileConfigDialog(false);}} profile_id={props.id} />}\n            />\n            <Popper open={dropdownOpen} anchorEl={dropdownAnchorRef.current} role={undefined} transition disablePortal>\n              {({ TransitionProps, placement }) => (\n                <Grow\n                  {...TransitionProps}\n                  style={{\n                    transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n                  }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={handleDropdownClose}>\n                      <MenuList id=\"split-button-menu\">\n                        <MenuItem key={\"dropdownprofile\" + props.id + \"menu1\"} onClick={()=>{setOpenProfileConfigDialog(true);}}>View Config</MenuItem>\n                       {\n                        props.running ? \n                        (<MenuItem key={\"dropdownprofile\" + props.id + \"menu2\"} onClick={()=>{setOpenProfileDialog(true);}}>View Stdout/Stderr</MenuItem>) : (null)\n                       }\n                      </MenuList>\n                      \n                    </ClickAwayListener>\n                  </Paper>\n                </Grow>\n              )}\n            </Popper>\n          </CardActions>\n      </div>\n    </Card>\n  );\n}\n","import React  from 'react';\nimport { C2ProfilesCard } from './C2ProfilesCard';\nimport {useSubscription, gql } from '@apollo/client';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n const SUB_C2_Profiles = gql`\n subscription getPayloadTypesSubscription {\n    c2profile(where: {deleted: {_eq: false}}, order_by: {name: asc}) {\n    author\n    id\n    container_running\n    description\n    is_p2p\n    last_heartbeat\n    name\n    running\n    translation_container\n    mythic_encrypts\n    payloadtypec2profiles(order_by: {payloadtype: {ptype: asc}}) {\n      payloadtype {\n        ptype\n      }\n    }\n  }\n}\n `;\nexport function C2Profiles(props){\n    const { loading, error, data } = useSubscription(SUB_C2_Profiles);\n\n    if (loading) {\n     return <LinearProgress />;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    return (\n        <div style={{maxHeight: \"calc(95vh)\", maxWidth: \"100%\"}}>\n        {\n            data.c2profile.map( (pt) => (\n                <C2ProfilesCard key={\"c2prof\" + pt.id} {...pt} />\n            ))\n        }\n        </div>\n    );\n}\n","import { IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Tab from '@material-ui/core/Tab';\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n\n\n\nexport function EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < props.rowCount}\n            checked={props.rowCount > 0 && numSelected === props.rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {props.headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nexport function EnhancedTableRow(props){\n    \n  const labelId = `enhanced-table-checkbox-${props.index}`;\n\n  return (\n    <TableRow\n      hover\n      onClick={(event) => props.handleClick(event, props.id)}\n      role=\"checkbox\"\n      aria-checked={props.isItemSelected}\n      tabIndex={-1}\n      key={props.id}\n      selected={props.isItemSelected}\n    >\n      <TableCell padding=\"checkbox\">\n        <Checkbox\n          checked={props.isItemSelected}\n          inputProps={{ 'aria-labelledby': labelId }}\n        />\n      </TableCell>\n      {props.children}\n    </TableRow>\n  );\n\n}\n","import React, {useState, useRef, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MythicTextField from '../../MythicComponents/MythicTextField';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport InsertLinkTwoToneIcon from '@material-ui/icons/InsertLinkTwoTone';\nimport * as d3 from 'd3';\nimport dagreD3 from 'dagre-d3';\n\nexport function C2PathDialog(props) {\n    const dagreRef = useRef(null);\n  const getC2Path = () => {\n    const info = props.callbackgraphedges.map( (edge) => { \n        return edge.source_id + \" -> \" + edge.destination_id + \": \" + edge.c2profile.is_p2p + \"\\n\";\n    } );\n    return info;\n  }      \n  \n  useEffect( () => {\n    drawC2PathElements(props.callbackgraphedges, dagreRef);\n  }, [])\n  return (\n    <React.Fragment>\n        <DialogTitle id=\"form-dialog-title\">Callback {props.id} ({props.agent_callback_id})'s Egress Path</DialogTitle>\n        <DialogContent dividers={true}>\n            <React.Fragment>\n                <svg ref={dagreRef} id=\"nodeTree\" width=\"550\" height=\"600\"></svg>\n            </React.Fragment>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.onClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n  </React.Fragment>\n  );\n}\nconst disconnected = \"stroke: #f66; stroke-width: 3px; stroke-dasharray: 5, 5; fill:none\";\nconst disconnectedArrow = \"fill: #f66\";\nconst connected = \"stroke: #333; fill: none; stroke-width: 1.5px;\";\nconst connectedArrow = \"stroke: blue; fill: blue; stroke-width: 1.5px;\"\nconst drawC2PathElements = (edges, dagreRef) =>{\n    var g = new dagreD3.graphlib.Graph({ compound: true }).setGraph({rankdir: \"LR\"}).setDefaultEdgeLabel(function() {return {}; });\n    edges.forEach( (edge) => {\n        if(edge.destination.id === edge.source.id){\n            g.setNode(edge.source.id, {label: edge.source.id, style: \"fill: #afa\" });\n            g.setNode(\"Mythic\", {label: \"Mythic\", style: \"fill: #afa\"});\n            if(edge.end_timestamp === null){\n                g.setEdge(edge.source.id, \"Mythic\", {label: edge.c2profile.name, \n                    style: connected,\n                    arrowheadStyle: connectedArrow})\n            }else{\n                g.setEdge(edge.source.id, \"Mythic\", {label: edge.c2profile.name, \n                    style: disconnected,\n                    arrowheadStyle: disconnectedArrow})\n            }\n            \n            return;\n        }\n        g.setNode(edge.destination.id, {label: edge.destination.id, style: \"fill: #afa\" });\n        g.setNode(edge.source.id, {label: edge.source.id, style: \"fill: #afa\" });\n        if(edge.direction === 1){\n            g.setEdge(edge.source.id, edge.destination.id, {label: edge.c2profile.name, \n            style: connected,\n            arrowheadStyle: connectedArrow})\n        }\n    })\n    var render = new dagreD3.render();\n    var svg = d3.select(dagreRef.current);\n    var svgGroup = svg.append(\"g\");\n    render(svgGroup, g);\n    var xCenterOffset = (svg.attr(\"width\") - g.graph().width) / 2;\n    svgGroup.attr(\"transform\", \"translate(\" + xCenterOffset + \", 20)\");\n    svg.attr(\"height\", g.graph().height + 40);\n}\n\n","import React, {useEffect} from 'react';\nimport {Button} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { MythicDialog } from '../../MythicComponents/MythicDialog';\nimport {EnhancedTableRow} from '../../MythicComponents/MythicTable';\nimport { useSnackbar } from 'notistack';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { toLocalTime, getTimeDifference, useInterval } from '../../utilities/Time';\nimport { meState } from '../../../cache';\nimport {useReactiveVar} from '@apollo/client';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport InsertLinkTwoToneIcon from '@material-ui/icons/InsertLinkTwoTone';\nimport {C2PathDialog} from './C2PathDialog';\n\nexport function CallbacksTableRow(props){\n    const me = useReactiveVar(meState);\n    const dropdownAnchorRef = React.useRef(null);\n    const [displayTime, setDisplayTime] = React.useState(\"\");\n    const [dropdownOpen, setDropdownOpen] = React.useState(false);\n    const [openC2Dialog, setOpenC2Dialog] = React.useState(false);\n    const handleDropdownToggle = (evt) => {\n        evt.stopPropagation();\n        setDropdownOpen((prevOpen) => !prevOpen);\n      };\n      const handleDropdownClose = (event) => {\n        if (dropdownAnchorRef.current && dropdownAnchorRef.current.contains(event.target)) {\n          return;\n        }\n        setDropdownOpen(false);\n      };\n    const updateTime = (curTime) => {\n        setDisplayTime(getTimeDifference(curTime));\n    };\n    useInterval( () => {\n        updateTime(props.last_checkin);\n    });\n    const onOpenTab = (tabType) => {\n        props.onOpenTab({tabType, tabID: props.id + tabType, callbackID: props.id});\n    }\n    const hasEgressRoute = () =>{\n        return props.callbackgraphedges.filter(edge => !edge.c2profile.is_p2p).length > 0;\n    }\n    \n    return (\n    <React.Fragment>\n        <EnhancedTableRow id={props.id} handleClick={props.handleClick} isItemSelected={props.isItemSelected(props.id)}> \n            <TableCell>\n                <ButtonGroup variant=\"contained\" color={props.locked ? \"secondary\" : \"primary\"} ref={dropdownAnchorRef} aria-label=\"split button\">\n                <Button size=\"small\" onClick={(evt) => {evt.stopPropagation();onOpenTab(\"interact\")}}>\n                 { props.locked ? (<LockIcon />):(<KeyboardIcon />) } {props.id}\n                 </Button>\n                 <Button\n                    style={{padding:0}} \n                    size=\"small\"\n                    aria-controls={dropdownOpen ? 'split-button-menu' : undefined}\n                    aria-expanded={dropdownOpen ? 'true' : undefined}\n                    aria-haspopup=\"menu\"\n                    onClick={handleDropdownToggle}\n                  >\n                    <ArrowDropDownIcon />\n                  </Button>\n                </ButtonGroup>\n            </TableCell>\n            <TableCell>{props.ip}</TableCell>\n            <TableCell>{props.host}</TableCell>\n            <TableCell>{props.user}</TableCell>\n            <TableCell>{props.domain}</TableCell>\n            <TableCell>{props.os}({props.architecture})</TableCell>\n            <TableCell>{props.pid}</TableCell>\n            <TableCell>{displayTime}</TableCell>\n            <TableCell>{props.description}</TableCell>\n            <TableCell>{props.payload.payloadtype.ptype}</TableCell>\n            <TableCell>{hasEgressRoute() ? \n                <WifiIcon onClick={(evt)=>{evt.stopPropagation();setOpenC2Dialog(true);}} /> : \n                <InsertLinkTwoToneIcon onClick={(evt)=>{evt.stopPropagation();setOpenC2Dialog(true);}} />\n                }\n            </TableCell>\n        </EnhancedTableRow>\n        <MythicDialog fullWidth={true} maxWidth=\"sm\" open={openC2Dialog} \n                    onClose={()=>{setOpenC2Dialog(false);}} \n                    innerDialog={<C2PathDialog onClose={()=>{setOpenC2Dialog(false);}} {...props} />}\n                />\n    </React.Fragment>\n    )\n}\n\n","import React from 'react';\nimport {Button} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {EnhancedTableHead, stableSort, getComparator} from '../../MythicComponents/MythicTable';\nimport { useSnackbar } from 'notistack';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { CallbacksTableRow } from './CallbacksTableRow';\nimport {TextField} from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 1,\n      })}\n    >\n      {numSelected > 1 ? (\n      <React.Fragment>\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n        <Tooltip title=\"Hide Selected\">\n          <IconButton aria-label=\"hide\">\n            <VisibilityOffOutlinedIcon />\n          </IconButton>\n        </Tooltip>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n            <Typography variant=\"h4\" align=\"left\" id=\"SettingsTable\" component=\"div\" style={{\"display\": \"inline-block\", \"float\": \"left\"}}>\n                  Active Callbacks\n            </Typography>\n        </React.Fragment> \n      )}\n    </Toolbar>\n  );\n};\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\nexport function CallbacksTable(props){\n      const classes = useStyles();\n      const [order, setOrder] = React.useState('asc');\n      const [orderBy, setOrderBy] = React.useState('interact');\n      const [selected, setSelected] = React.useState([]);\n      const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n          const newSelecteds = props.callbacks.map((n) => n.id);\n          setSelected(newSelecteds);\n          return;\n        }\n        setSelected([]);\n      };\n      const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n          newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n          newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n          newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n          newSelected = newSelected.concat(\n            selected.slice(0, selectedIndex),\n            selected.slice(selectedIndex + 1),\n          );\n        }\n\n        setSelected(newSelected);\n      };\n      const isSelected = (name) => selected.indexOf(name) !== -1;\n      const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n      };\n    const tableHeadCells = [\n        {id: \"id\", numeric: true, disablePadding: false, label: \"Interact\"},\n        {id: \"ip\", numeric: false, disablePadding: false, label: \"IP\"},\n        {id: \"host\", numeric: false, disablePadding: false, label: \"Host\"},\n        {id: \"user\", numeric: false, disablePadding: false, label: \"User\"},\n        {id: \"domain\", numeric: false, disablePadding: false, label: \"Domain\"},\n        {id: \"os\", numeric: false, disablePadding: false, label: \"OS\"},\n        {id: \"pid\", numeric: true, disablePadding: false, label: \"PID\"},\n        {id: \"last_checkin\", numeric: true, disablePadding: false, label: \"Last Checkin\"},\n        {id: \"description\", numeric: false, disablePadding: false, label: \"Description\"},\n        {id: \"payload\", numeric: false, disablePadding: false, label: \"Payload\"},\n        {id: \"c2\", numeric: false, disablePadding: true, label: \"C2\"}\n    ]\n    return (\n        <div>  \n            <TableContainer component={Paper} className=\"mythicElement\" style={{\"maxWidth\": \"100%\", \"overflow\": \"auto\", height: \"calc(\" + props.topHeight + \"vh)\"}}>\n                <EnhancedTableToolbar numSelected={selected.length}/>\n                <Table size=\"small\" >\n                    <EnhancedTableHead numSelected={selected.length} rowCount={props.callbacks.length} classes={classes} headCells={tableHeadCells} onSelectAllClick={handleSelectAllClick} onRequestSort={handleRequestSort} orderBy={orderBy} order={order}/>\n                    <TableBody >\n                    {\n                        stableSort(props.callbacks, getComparator(order, orderBy)).map( (cal, index) => (\n                            <CallbacksTableRow handleClick={handleClick} isItemSelected={isSelected} onOpenTab={props.onOpenTab} key={\"callback\" + cal.id} {...cal} />\n                        ))\n                    }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n\n","import { IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Tab from '@material-ui/core/Tab';\nimport React from 'react';\n\nexport function MythicTabPanel(props) {\n  const { children, value, index, maxHeight, tabInfo, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      \n      {...other}\n    >\n      {value === index ? (<React.Fragment>{children}</React.Fragment>) : (null)}\n    </div>\n  )\n}\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\nexport function MythicTabLabel(props){\n    const {label, index, fullWidth, maxHeight, onCloseTab, selectionFollowsFocus, textColor, indicator, tabInfo, ...other} = props;\n    return (\n        <Tab label={\n            <span>\n                {label}<IconButton component=\"div\" size=\"small\" onClick={(e) => {\n                    e.stopPropagation();console.log(tabInfo);onCloseTab({tabID: tabInfo.tabID});\n                    }} {...other}><CloseIcon /></IconButton>\n            </span>\n        } {...a11yProps(index)} {...other}/>\n    )\n}\n\n","import React, {useEffect} from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {useQuery, gql } from '@apollo/client';\n\nfunction hex2a(hexx) {\n    var hex = hexx.toString();\n    var str = '';\n    for (var i = 0; i < hex.length; i += 2)\n        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    return str;\n}\n\nconst getResponsesQuery = gql`\nquery getResponsesQuery($task_id: Int!) {\n  response(where: {task_id: {_eq: $task_id}}) {\n    id\n    response\n  }\n}`;\n\nexport function ResponseDisplay(props){\n    const {loading, error, data} = useQuery(getResponsesQuery, {variables: {task_id: props.task_id}});\n    if (loading) {\n     return <LinearProgress />;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n  return (\n      <div style={{overflow: \"auto\", width: \"100%\"}}>\n        {data.response.map( (response) => (\n            <pre key={\"resp\" + response.id}>{hex2a(response.response.substring(2))}</pre>\n        ) ) }\n      </div>\n  )\n      \n}\n\n","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MythicTextField from '../../MythicComponents/MythicTextField';\nimport {useQuery, gql, useReactiveVar, useMutation} from '@apollo/client';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { meState } from '../../../cache';\n\nconst updateCommentMutation = gql`\nmutation updateComment ($task_id: Int!, $comment: String, $commentOperator_id: Int) {\n  update_task_by_pk(pk_columns: {id: $task_id}, _set: {comment: $comment, comment_operator_id: $commentOperator_id}) {\n    comment\n    commentOperator {\n      username\n    }\n    id\n  }\n}\n`;\nconst getCommentQuery = gql`\nquery getCommentQuery ($task_id: Int!) {\n  task_by_pk(id: $task_id) {\n    comment\n    commentOperator {\n      username\n    }\n    id\n  }\n}\n`;\n\nexport function TaskCommentDialog(props) {\n    const [comment, setComment] = useState(\"\");\n    const me = useReactiveVar(meState);\n    const { loading, error } = useQuery(getCommentQuery, {\n        variables: {task_id: props.task_id},\n        onCompleted: data => {\n            setComment(data.task_by_pk.comment)\n        },\n        fetchPolicy: \"network-only\"\n    });\n    const [updateComment] = useMutation(updateCommentMutation, {\n        update: (cache, {data}) => {\n            //console.log(data);\n        }\n    });\n    if (loading) {\n     return <LinearProgress />;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    const onCommitSubmit = () => {\n        updateComment({variables: {task_id: props.task_id, comment: comment, commentOperator_id: me.user.id}});\n        props.onClose();\n    }\n    const onChange = (name, value, error) => {\n        setComment(value);\n    }\n  \n  return (\n    <React.Fragment>\n        <DialogTitle id=\"form-dialog-title\">Edit Task Comment</DialogTitle>\n        <DialogContent dividers={true}>\n            <MythicTextField multiline={true} onChange={onChange} value={comment} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.onClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={onCommitSubmit} color=\"secondary\">\n            Submit\n          </Button>\n        </DialogActions>\n  </React.Fragment>\n  );\n}\n\n","import React, {useEffect, useRef} from 'react';\nimport {Button, IconButton} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { toLocalTime } from '../../utilities/Time';\nimport { copyStringToClipboard } from '../../utilities/Clipboard';\nimport { meState } from '../../../cache';\nimport {useReactiveVar} from '@apollo/client';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CodeIcon from '@material-ui/icons/Code';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport Badge from '@material-ui/core/Badge';\nimport {ResponseDisplay} from './ResponseDisplay';\nimport { useSnackbar } from 'notistack';\nimport RateReviewOutlinedIcon from '@material-ui/icons/RateReviewOutlined';\nimport { MythicDialog } from '../../MythicComponents/MythicDialog';\nimport {TaskCommentDialog} from './TaskCommentDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '99%',\n    marginTop: \"3px\",\n    marginBottom: \"2px\",\n    marginLeft: \"3px\",\n    marginRight: \"0px\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    padding: \"0 5px 0 0\",\n    display: \"inline-block\"\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}));\n\nexport function TaskDisplay(props){\n    const me = useReactiveVar(meState);\n    const { enqueueSnackbar } = useSnackbar();\n    const dropdownAnchorRef = React.useRef(null);\n    const [displayTime, setDisplayTime] = React.useState(\"\");\n    const [displayComment, setDisplayComment] = React.useState(false);\n    const [dropdownOpen, setDropdownOpen] = React.useState(false);\n    const [alertBadges, setAlertBadges] = React.useState(0);\n    const [openCommentDialog, setOpenCommentDialog] = React.useState(false);\n    const handleDropdownToggle = () => {\n        setDropdownOpen((prevOpen) => !prevOpen);\n      };\n      const handleDropdownClose = (event) => {\n        if (dropdownAnchorRef.current && dropdownAnchorRef.current.contains(event.target)) {\n          return;\n        }\n        setDropdownOpen(false);\n      };\n    const classes = useStyles();\n    const getTaskStatus = () => {\n        if(props.task.status === \"error\"){\n            return (<Button size=\"small\" color=\"secondary\" style={{padding: \"0\"}}>Error</Button>)\n        }else if(props.task.completed){\n             return (<Button size=\"small\" color=\"primary\" style={{padding: \"0\"}}>Completed</Button>)\n        }else{\n             return (<Button size=\"small\" color=\"primary\" style={{padding: \"0\"}}>{props.task.status}</Button>)\n        }\n    }\n    const prevResponses = useRef(props.task.responses);\n    useEffect( () => {\n        //console.log(\"in use effect\", prevResponses.current, props.task.responses);\n        if(!dropdownOpen){\n            if(props.task.responses.length > prevResponses.current.length){\n                setAlertBadges(props.task.responses.length - prevResponses.current.length);\n            }\n        }else{\n            setAlertBadges(0);\n        }\n    }, [props.task.responses, dropdownOpen]);\n    const toggleTaskDropdown = (event, newExpanded) => {\n        if(newExpanded){\n            setAlertBadges(0);\n        }\n    }\n    const copyToClipboard = () => {\n        let result = copyStringToClipboard(props.task.original_params);\n        if(result){\n            enqueueSnackbar(\"Copied text!\", {variant: \"success\"});\n        }else{\n            enqueueSnackbar(\"Failed to copy text\", {variant: \"error\"});\n        }\n    }\n    const toggleDisplayComment = (evt) => {\n        evt.stopPropagation();\n        setDisplayComment(!displayComment);\n    }\n  return (\n    <Paper className={classes.root} elevation={5}>\n      <Accordion TransitionProps={{ unmountOnExit: true }} onChange={toggleTaskDropdown}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1c-content\"\n          id=\"panel1c-header\"\n        >\n        <div style={{display: \"block\"}}>\n          {displayComment ? (\n            <React.Fragment>\n                <Typography className={classes.secondaryHeading}>{props.task.commentOperator.username}</Typography>\n                <Typography className={classes.heading}>{props.task.comment}</Typography>\n            </React.Fragment>\n          ) : (null)}\n            <div className={classes.column}>\n                <Badge badgeContent={alertBadges} color=\"secondary\" anchorOrigin={{vertical: 'top', horizontal: 'left'}}>\n                    {getTaskStatus()}\n                </Badge>\n              </div>\n              {props.task.comment != \"\" ? (\n                <div className={classes.column}>\n                    <IconButton size=\"small\" color=\"primary\" style={{padding: \"0\"}} onClick={toggleDisplayComment}><ChatOutlinedIcon/></IconButton>\n                  </div>\n              ) : (null)}\n              <div className={classes.column}>\n                <Typography className={classes.heading}>{props.task.command.cmd}</Typography>\n              </div>\n              <div className={classes.column}>\n                <Typography className={classes.secondaryHeading}>{props.task.original_params}</Typography>\n              </div>\n          </div>\n        </AccordionSummary>\n        <AccordionDetails className={classes.details}>\n          <ResponseDisplay task_id={props.task.id} />\n        </AccordionDetails>\n        <Divider />\n        <AccordionActions style={{ padding: \"0px\", width: \"100%\"}}>\n          <div className={classes.column} >\n            <Typography className={classes.secondaryHeading}>Task: {props.task.id}, {props.task.operator.username}, {toLocalTime(props.task.timestamp, me.user.view_utc_time)}</Typography>\n          </div>\n          <div className={classes.column}>\n              <IconButton size=\"small\" color=\"primary\"><GetAppIcon/></IconButton>\n              <IconButton size=\"small\" color=\"primary\" href={'/task/' + props.task.id} target=\"_blank\"><LinkIcon/></IconButton>\n              <IconButton size=\"small\" color=\"primary\"><CodeIcon/></IconButton>\n              <IconButton size=\"small\" color=\"primary\" onClick={copyToClipboard}><FileCopyOutlinedIcon/></IconButton>\n              <IconButton size=\"small\" color=\"primary\" onClick={()=>{setOpenCommentDialog(true);}}><RateReviewOutlinedIcon/></IconButton>\n              <MythicDialog fullWidth={true} maxWidth=\"md\" open={openCommentDialog} \n                    onClose={()=>{setOpenCommentDialog(false);}} \n                    innerDialog={<TaskCommentDialog task_id={props.task.id} onClose={()=>{setOpenCommentDialog(false);}} />}\n                />\n          </div>\n        </AccordionActions>\n      </Accordion>\n    </Paper>\n  );\n}\n\n","export function copyStringToClipboard(str) {\n    try {\n        // Create new element\n        let el = document.createElement('textarea');\n        // Set value (string to be copied)\n        el.value = str;\n        // Set non-editable to avoid focus and move outside of view\n        el.setAttribute('readonly', '');\n        el.style = {position: 'absolute', left: '-9999px'};\n        document.body.appendChild(el);\n        // Select text inside element\n        el.select();\n        // Copy text to clipboard\n        document.execCommand('copy');\n        // Remove temporary element\n        document.body.removeChild(el);\n        return true;\n    } catch (error) {\n        console.log(\"warning\", \"Failed to copy to clipboard: \" + error.toString());\n        return false;\n    }\n}\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\nimport {Button} from '@material-ui/core';\nimport MythicTextField from '../../MythicComponents/MythicTextField';\n\nexport function TaskParametersDialogRow(props){\n    const [value, setValue] = React.useState(\"\");\n    const [fileValue, setFileValue] = React.useState({name: \"\"});\n    const getParamChooseOptions = () => {\n        if(props.default_value){\n            const options = props.default_value.split(\"\\n\");\n            if( value === null){\n                setValue(options[0]);\n            }\n            return options;\n        }else{\n            const options = props.parameter.split(\"\\n\");\n            if( value === null){\n                setValue(options[0]);\n            }\n            return options;\n        }\n        \n    }\n    const onChangeValue = (evt) => {\n        setValue(evt.target.value);\n        props.onChange(props.name, evt.target.value, false);\n    }\n    const onChangeText = (name, value, error) => {\n        setValue(value);\n        props.onChange(props.name, value, error);\n    }\n    const onSwitchChange = (name, value) => {\n        setValue(value);\n        props.onChange(name, value);\n    }\n    const onFileChange = (evt) => {\n        setFileValue({name: evt.target.files[0].name, file: evt.target.files[0]});\n        props.onChange(props.name, evt.target.files[0]);\n    }\n    const testParameterValues = (curVal) => {\n        if( props.required && props.verifier_regex !== \"\"){\n            return !RegExp(props.verifier_regex).test(curVal);\n        }else if(props.verifier_regex !== \"\" && curVal !== \"\"){\n            return !RegExp(props.verifier_regex).test(curVal);\n        }else{\n            return false;\n        }\n    }\n    const getParameterObject = () => {\n        switch(props.type){\n            case \"ChooseOne\":\n                return (\n                    <FormControl>\n                        <Select\n                          native\n                          value={value}\n                          onChange={onChangeValue}\n                        >\n                        {\n                            getParamChooseOptions().map((opt, i) => (\n                                <option key={\"buildparamopt\" + i} value={opt}>{opt}</option>\n                            ))\n                        }\n                        </Select>\n                    </FormControl>\n                )\n            case \"String\":\n                return (\n                    <MythicTextField required={props.required} placeholder={props.default_value} value={value} multiline={true}\n                        onChange={onChangeText} display=\"inline-block\"\n                        validate={testParameterValues} errorText={\"Must match: \" + props.verifier_regex}\n                    />\n                )\n            case \"Boolean\":\n                return (\n                    <Switch checked={value} onChange={onSwitchChange} />\n                )\n            case \"File\":\n                return (\n                    <Button variant=\"contained\" component=\"label\"> \n                        { fileValue.name === \"\" ? \"Select File\" : fileValue.name } \n                    <input onChange={onFileChange} type=\"file\" hidden /> </Button>\n                )\n           default:\n            return null\n        }\n    }\n    \n    return (\n            <TableRow key={\"buildparam\" + props.id}>\n                <TableCell>{props.description}\n                 </TableCell>\n                <TableCell>\n                    {getParameterObject()}\n                </TableCell>\n            </TableRow>\n        )\n}\n\n","import React, {useState, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MythicTextField from '../../MythicComponents/MythicTextField';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {TaskParametersDialogRow} from './TaskParametersDialogRow';\n\nexport function TaskParametersDialog(props) {\n    const [parameters, setParameters] = useState([]);\n    useEffect( () => {\n        const params = props.command.commandparameters.map( (cmd) => {\n            switch(cmd.type){\n                case \"String\":\n                case \"Boolean\":\n                case \"Number\":\n                    return {...cmd, value: cmd.default_value};\n                case \"Array\":\n                    if(cmd.default_value.length > 0){\n                        return {...cmd, value: JSON.parse(cmd.default_value)};\n                    }else{\n                        return {...cmd, value: []};\n                    }\n                case \"Choice\":\n                    return {...cmd, choices: cmd.choices.split(\"\\n\"), value: cmd.default_value}\n                case \"ChoiceMultiple\":\n                    if(cmd.devault_value.length > 0){\n                        return {...cmd, choices: cmd.choices.split(\"\\n\"), value: JSON.parse(cmd.default_value)}\n                    }else{\n                        return {...cmd, choices: cmd.choices.split(\"\\n\"), value: []}\n                    }\n                \n                case \"File\":\n                    return {...cmd, value: {} }\n                /*\n                case \"Credential-JSON\":\n                case \"Credential-Account\":\n                case \"Credential-Realm\":\n                case \"Credential-Type\":\n                case \"Credential-Credential\":\n                case \"PayloadList\":\n                case \"AgentConnect\":\n                */\n                default:\n                    return {...cmd}\n            }\n        } );\n        setParameters(params);\n    }, []);\n    const onSubmit = () => {\n        props.onSubmit(props.command.cmd, parameters);\n    }\n    const getParameterTypeRow = (parameter_type) => {\n    \n    }\n    const onChange = (name, value, error) => {\n        const params = parameters.map( (param) => {\n            if(param.name == name){\n                return {...param, value: value};\n            }else{\n                return {...param};\n            }\n        });\n        setParameters(params);\n    }\n  \n  return (\n    <React.Fragment>\n        <DialogTitle id=\"form-dialog-title\">{props.command.cmd}'s Parameters</DialogTitle>\n        <DialogContent dividers={true}>\n            <Typography component=\"div\">\n                <b>Help</b> <pre style={{margin:0}}>{props.command.help_cmd}</pre>\n                <b>Description</b> <pre style={{margin:0}}>{props.command.description}</pre>\n                <b>Requires Admin?</b> {props.command.needs_admin ? \"True\": \"False\"}\n            </Typography>\n            <TableContainer component={Paper} className=\"mythicElement\"> \n                <Table size=\"small\" style={{\"tableLayout\": \"fixed\", \"maxWidth\": \"100%\", \"overflow\": \"scroll\"}}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Parameter</TableCell>\n                            <TableCell>Value</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {parameters.map( (op) => (\n                            <TaskParametersDialogRow key={\"taskparameterrow\" + op.id} onChange={onChange} {...op} />\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.onClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={onSubmit} color=\"secondary\">\n            Submit\n          </Button>\n        </DialogActions>\n  </React.Fragment>\n  );\n}\n\n","import {MythicTabPanel, MythicTabLabel} from '../../../components/MythicComponents/MythicTabPanel';\nimport { IconButton } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport SendIcon from '@material-ui/icons/Send';\nimport React, {useEffect, useRef} from 'react';\nimport {TextField} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {useQuery, gql, useMutation, useLazyQuery } from '@apollo/client';\nimport { TaskDisplay } from './TaskDisplay';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useSnackbar } from 'notistack';\nimport { MythicDialog } from '../../MythicComponents/MythicDialog';\nimport {TaskParametersDialog} from './TaskParametersDialog';\n\nexport function CallbacksTabsTaskingLabel(props){\n    return (\n        <MythicTabLabel label={\"Callback: \" + props.tabInfo.callbackID} {...props}/>\n    )\n}\nconst GetLoadedCommandsQuery = gql`\nquery GetLoadedCommandsQuery($callback_id: Int!) {\n  loadedcommands(where: {callback_id: {_eq: $callback_id}}) {\n    id\n    command {\n      cmd\n      help_cmd\n      description\n      id\n      needs_admin\n      commandparameters {\n        choices\n        default_value\n        description\n        id\n        name\n        required\n        type\n      }\n    }\n  }\n}\n`;\nconst createTaskingMutation = gql`\nmutation createTasking($callback_id: Int!, $command: String!, $params: String!) {\n  createTask(callback_id: $callback_id, command: $command, params: $params) {\n    status\n    id\n    error\n  }\n}\n`;\nconst getTaskingQuery = gql`\nquery getTasking($callback_id: Int!){\n    task(where: {callback_id: {_eq: $callback_id}}, order_by: {id: asc}) {\n        comment\n        commentOperator{\n            username\n        }\n        completed\n        id\n        operator{\n            username\n        }\n        original_params\n        status\n        timestamp\n        command {\n          cmd\n        }\n        responses {\n          id\n        }\n  }\n}\n `;\nconst getTaskingSubscription = gql`\nsubscription getNewUpdatedTaskingSubscription($callback_id: Int!) {\n  task(where: {callback_id: {_eq: $callback_id}}, limit: 1, order_by: {timestamp: desc}) {\n        comment\n        commentOperator{\n            username\n        }\n        completed\n        id\n        operator{\n            username\n        }\n        original_params\n        status\n        timestamp\n        command {\n          cmd\n        }\n        responses {\n          id\n        }\n  }\n}\n `;\nexport function CallbacksTabsTaskingPanel(props){\n    const { enqueueSnackbar } = useSnackbar();\n    const [message, setMessage] = React.useState(\"\");\n    const [highlighted, setHighlighted] = React.useState(\"\");\n    const [commands, setCommands] = React.useState([]);\n    const [autocompleteOptions, setAutocompleteOptions] = React.useState([]);\n    const [openParametersDialog, setOpenParametersDialog] = React.useState(false);\n    const [commandInfo, setCommandInfo] = React.useState({});\n    const [createTask] = useMutation(createTaskingMutation, {\n        update: (cache, {data}) => {\n            console.log(data);\n            if(data.createTask.status === \"error\"){\n                enqueueSnackbar(data.createTask.error, {variant: \"error\"});\n            }else{\n                enqueueSnackbar(\"task created\", {variant: \"success\"});\n            }\n        }\n    });\n    const {loading, error} = useQuery(GetLoadedCommandsQuery, {\n        variables: {callback_id: props.tabInfo.callbackID},\n        onCompleted: data => {\n            const cmds = data.loadedcommands.map( (cmd) => {\n                return cmd.command;\n            } );\n            cmds.sort((a, b) => -b.cmd.localeCompare(a.cmd))\n            setCommands(cmds);\n        }\n        });\n    const [getTasking, { loading: taskingLoading, data: taskingData, subscribeToMore: subscribeToMoreTasks }] = useLazyQuery(getTaskingQuery, {\n        onCompleted: data => {\n            subscribeToMoreTasks({\n            document: getTaskingSubscription,\n            variables: {callback_id: props.tabInfo.callbackID},\n            updateQuery: (prev, {subscriptionData} ) => {\n                console.log(\"got subscription data\", subscriptionData);\n                if(!subscriptionData.data) return prev;\n                if(subscriptionData.data.task.length === 0) return prev;\n                const exists = prev.task.find(\n                  ({ id }) => id === subscriptionData.data.task[0].id\n                );\n                if (exists) return prev;\n                return Object.assign({}, prev, {\n                    task: [...prev.task, subscriptionData.data.task[0]]\n                });\n            },\n            onError: (err) => {\n                console.log(err)\n                enqueueSnackbar(\"Task Subscription errored\", {variant: \"error\"});\n            }\n        })\n        }\n    });\n    const messagesEndRef = useRef(null);\n    const scrollToBottom = () => {\n        if(taskingData && messagesEndRef.current){\n            messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n        \n      }\n    useEffect( () => {\n        getTasking({variables: {callback_id: props.tabInfo.callbackID} });\n    }, []);\n    \n    useEffect(scrollToBottom, [taskingData]);\n    if (loading) {\n     return <LinearProgress />;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    const onSubmitCommandLine = (evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        const command = message.split(\" \")[0];\n        const commandParams = commands.find(com => com.cmd === command);\n        console.log(commandParams);\n        const params = message.substring(command.length).trim();\n        if(commandParams === undefined){\n            enqueueSnackbar(\"Unknown command\", {variant: \"warning\"});\n            return; \n        }else if(commandParams.commandparameters.length === 0){\n            // if there are no parameters, just send whatever the user types along\n            onCreateTask({callback_id: props.tabInfo.callbackID, command: command, params: params});\n        }else{\n            // check if there's a \"file\" component that needs to be displayed\n            const fileParamExists = commandParams.commandparameters.find(param => param.parameter_type === \"File\");\n            if(fileParamExists || params.length === 0){\n                //need to do a popup\n                setCommandInfo({...commandParams, \"typedParameters\": message});\n                setOpenParametersDialog(true);\n                return;\n            }else{\n                onCreateTask({callback_id: props.tabInfo.callbackID, command: command, params: params});\n            }            \n        }\n        setMessage(\"\");\n    }\n    const submitParametersDialog = (cmd, parameters) => {\n        console.log(parameters);\n        setOpenParametersDialog(false);\n        onCreateTask({callback_id: props.tabInfo.callbackID, command: cmd, params: parameters});\n    }\n    const onCreateTask = ({callback_id, command, params}) => {\n        createTask({variables: {callback_id, command, params}});\n    }\n    \n    const handleAutocompleteChange = (evt, value) => {\n        if(value !== undefined){\n            setMessage(value);\n            return;\n        }\n        if(evt.type === \"change\"){\n            setMessage(evt.target.value);\n        }else if(evt.type === \"click\"){\n            setMessage(evt.target.innerText);\n        }else{\n            return;\n        }\n        if(evt.target.value.length === 0){\n            setAutocompleteOptions([]);\n        }else if(autocompleteOptions.length === 0){\n            setAutocompleteOptions(commands.map( (option) => option.cmd));\n        }\n    }\n    const onKeyDown = (evt) => {\n        if(evt.code === \"ArrowUp\" || evt.code === \"ArrowDown\"){\n            if(autocompleteOptions.length === 0){\n                if(taskingData){\n                    const prevCmds = taskingData.task.map( (task) => {\n                        if(task.command){return task.command.cmd + \" \" + task.original_params;}\n                        else{return task.original_params};\n                    });\n                    const deDup = prevCmds.reduce( (prev, cur) => {\n                        if(prev.includes(cur)){return prev}\n                        return [...prev, cur]\n                    }, []);\n                    setAutocompleteOptions(deDup);\n                }\n            }\n        }else if(evt.key === \"Tab\"){\n            if(highlighted !== \"\"){\n                const highlight = highlighted;\n                setMessage(highlight + \" \");\n                setHighlighted(\"\");\n                evt.preventDefault();\n                evt.stopPropagation();\n            }\n        }\n    }\n    const onHighlightChange = (evt, option, reason) => {\n        if(option !== null){\n            setHighlighted(option);\n        }\n    }\n    \n    return (\n        <MythicTabPanel {...props} >\n            <div style={{maxHeight: `calc(${props.maxHeight - 6}vh)`, overflow: \"auto\", height: `calc(${props.maxHeight - 6}vh)`}}>\n            {\n             taskingLoading ? (<LinearProgress />) : (taskingData &&\n                taskingData.task.map( (task) => (\n                    <TaskDisplay key={\"taskinteractdisplay\" + task.id} task={task}  />\n                ))\n             )\n             \n            }\n            <div ref={messagesEndRef} />\n            </div>\n            <MythicDialog fullWidth={true} maxWidth=\"md\" open={openParametersDialog} \n                    onClose={()=>{setOpenParametersDialog(false);}} \n                    innerDialog={<TaskParametersDialog command={commandInfo} onSubmit={submitParametersDialog} onClose={()=>{setOpenParametersDialog(false);}} />}\n                />\n            <div style={{ position: \"absolute\", width: \"100%\"}}>\n                <form onSubmit={onSubmitCommandLine}>\n                    <Autocomplete\n                        freeSolo\n                        autoComplete\n                        autoHighlight\n                        id=\"free-solo-2-demo\"\n                        disableClearable\n                        disableListWrap\n                        inputValue={message}\n                        size=\"small\"\n                        onHighlightChange={onHighlightChange}\n                        onChange={handleAutocompleteChange}\n                        options={autocompleteOptions}\n                        renderInput={(params) => {\n                            params.InputProps.onKeyDown = onKeyDown;\n                            return(\n                              <TextField\n                                {...params}\n                                onChange={handleAutocompleteChange}\n                                onKeyDown={onKeyDown}                         \n                                size=\"small\"\n                                variant=\"outlined\"\n                                InputProps={{ ...params.InputProps, type: 'search',\n                                    endAdornment:\n                                    <React.Fragment>\n                                    <IconButton color=\"primary\" variant=\"contained\" onClick={onSubmitCommandLine}><SendIcon/></IconButton>\n                                    </React.Fragment>\n                               \n                                }}\n                              />\n                            )\n                        }}\n                      />\n                  </form>\n            </div>  \n        </MythicTabPanel>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport {CallbacksTabsTaskingLabel, CallbacksTabsTaskingPanel} from './CallbacksTabsTasking';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\nexport function CallbacksTabs(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const [tabs, setTabs] = React.useState([]);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n  return (\n    <div className={classes.root} style={{maxHeight: props.maxHeight, height: props.maxHeight, background: \"transparent\"}}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs \n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n        {\n            props.openTabs.map( (tab, index) => (\n                <CallbacksTabsTaskingLabel onCloseTab={props.onCloseTab} key={\"tablabel\" + tab.tabID + tab.tabType} tabInfo={tab} index={index}/>\n            ))\n        }\n        </Tabs>\n      </AppBar>\n      {\n        props.openTabs.map( (tab, index) => (\n            <CallbacksTabsTaskingPanel maxHeight={props.tabHeight} style={{height:`calc(${props.tabHeight}vh)`, maxHeight:`calc(${props.tabHeight}vh)`, position: \"relative\", overflow: \"auto\"}} key={\"tabpanel\" + tab.tabID + tab.tabType} tabInfo={tab} value={value} index={index}/>\n        ))\n      }\n\n    </div>\n  )\n}\n\n","import React, {useState, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MythicTextField from '../../MythicComponents/MythicTextField';\n\n\nexport function HeightsDialog(props) {\n  const [heights, setHeights] = React.useState({});\n  useEffect( () => {\n    setHeights(props.heights);\n  }, []);\n  const onSubmit = () => {\n    props.onSubmit(heights);\n    props.onClose();\n  }\n  const onChange = (name, value, error) => {\n    const newHeights = {...heights};\n    newHeights[name] = parseInt(value);\n    setHeights(newHeights);\n  }\n  return (\n    <React.Fragment>\n        <DialogTitle id=\"form-dialog-title\">Adjust sizes of Top/Bottom sections</DialogTitle>\n        <DialogContent dividers={true}>\n            <React.Fragment>\n                <MythicTextField value={heights.top} onChange={onChange} name=\"top\" type=\"number\"/>\n                <MythicTextField value={heights.bottom} onChange={onChange} name=\"bottom\" type=\"number\"/>\n            </React.Fragment>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.onClose}>\n            Close\n          </Button>\n          <Button onClick={onSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n  </React.Fragment>\n  );\n}\n\n","import React  from 'react';\nimport {useSubscription, gql } from '@apollo/client';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport {CallbacksTable} from './CallbacksTable';\nimport { meState } from '../../../cache';\nimport {useReactiveVar} from '@apollo/client';\nimport {CallbacksTabs} from './CallbacksTabs';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport TocIcon from '@material-ui/icons/Toc';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport {HeightsDialog} from './HeightsDialog';\nimport { MythicDialog } from '../../MythicComponents/MythicDialog';\n\n const SUB_Callbacks = gql`\nsubscription CallbacksSubscription ($operation_id: Int!){\n  callback(where: {active: {_eq: true}, operation_id: {_eq: $operation_id}}, order_by: {id: desc}) {\n    architecture\n    description\n    domain\n    external_ip\n    host\n    id\n    integrity_level\n    ip\n    last_checkin\n    locked\n    sleep_info\n    port\n    pid\n    os\n    user\n    agent_callback_id\n    payload {\n      payloadtype {\n        ptype\n      }\n    }\n    callbackgraphedges {\n      direction\n      end_timestamp\n      id\n      metadata\n      c2profile {\n        id\n        name\n        is_p2p\n      }\n      destination {\n        active\n        id\n      }\n      source {\n        active\n        id\n      }\n    }\n  }\n}\n `;\n const useStyles = makeStyles((theme) => ({\n  root: {\n    transform: 'translateZ(0px)',\n    flexGrow: 1,\n  },\n  speedDial: {\n    position: 'absolute',\n    '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n    '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\n      top: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  },\n}));\nexport function Callbacks(props){\n    const me = useReactiveVar(meState);\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [openTabs, setOpenTabs] = React.useState([]);\n    const [heights, setHeights] = React.useState({top: 30, bottom: 60});\n    const [openHeightsDialog, setOpenHeightsDialog] = React.useState(false);\n    const { loading, error, data } = useSubscription(SUB_Callbacks, {\n        variables: {operation_id: me.user.current_operation_id}\n    });\n    if (loading) {\n     return <LinearProgress style={{marginTop: \"20px\"}} />;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n    const onOpenTab = ({tabID, tabType, callbackID}) => {\n        let found = false;\n        openTabs.forEach( (tab) => {\n            if(tab.tabID === tabID) found = true;\n        });\n        if(!found){\n            const tabs = [...openTabs, {tabID, tabType, callbackID}];\n            setOpenTabs(tabs);\n        }\n        \n    }\n    const onCloseTab = ({tabID}) => {\n        let setNewTab = false;\n        const tabSet = openTabs.filter( (tab) => {\n            return tab.tabID !== tabID;\n        });\n        setOpenTabs(tabSet);\n    }\n    const actions = [\n      { icon: <TocIcon />, name: 'Table layout'},\n      { icon: <AssessmentIcon />, name: 'Graph layout'},\n      { icon: <AspectRatioIcon />, name: 'Adjust Top/Bottom Size' , onClick: () => {setOpenHeightsDialog(true);setOpen(false);}},\n    ];\n    const onSubmitHeights = (newHeights) => {\n        setHeights(newHeights);\n        console.log(newHeights);\n        setOpen(false);\n    }\n    return (\n        <div style={{maxWidth: \"100%\",height: \"calc(95vh)\"}}>\n            <CallbacksTable maxHeight={`calc(${heights.top}vh)`} topHeight={heights.top} key={\"callbackstable\"} onOpenTab={onOpenTab} callbacks={data.callback} />\n            <CallbacksTabs onCloseTab={onCloseTab} tabHeight={heights.bottom} maxHeight={`calc(${heights.bottom}vh)`} key={\"callbackstabs\"} openTabs={openTabs} callbacks={data.callback} />\n            <SpeedDial\n              ariaLabel=\"SpeedDial example\"\n              className={classes.speedDial}\n              icon={<SpeedDialIcon />}\n              onClose={()=>{setOpen(false);}}\n              onOpen={()=>{setOpen(true);}}\n              FabProps={{ color: \"secondary\" }}\n              open={open}\n              direction=\"down\"\n            >\n              {actions.map((action) => (\n                <SpeedDialAction\n                  key={action.name}\n                  icon={action.icon}\n                  tooltipTitle={action.name}\n                  onClick={action.onClick}\n                />\n              ))}\n            </SpeedDial>\n            <MythicDialog fullWidth={true} maxWidth=\"sm\" open={openHeightsDialog} \n                    onClose={()=>{setOpenHeightsDialog(false);setOpen(false);}} \n                    innerDialog={<HeightsDialog onClose={()=>{setOpenHeightsDialog(false);setOpen(false);}} heights={heights} onSubmit={onSubmitHeights} />}\n                />\n        </div>\n    );\n}\n","import React from 'react';\nimport {useSubscription, gql } from '@apollo/client';\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Link } from 'react-router-dom';\nimport { IconButton } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { useSnackbar } from 'notistack';\n\nconst SUB_Event_Logs = gql`\nsubscription MySubscription {\n  operationeventlog_aggregate(where: {deleted: {_eq: false}, level: {_eq: \"warning\"}, resolved: {_eq: false}}) {\n    aggregate{\n        count\n    }\n  }\n}\n `;\n \n \nexport function TopAppBarNotifications(props) {\n  const { enqueueSnackbar } = useSnackbar();\n  const { loading, error, data } = useSubscription(SUB_Event_Logs, {\n    onError: data => {\n        enqueueSnackbar(\"Mythic encountered an error getting event log messages: \" + data.toString(), {variant: \"error\"});\n        console.log(data);\n    }\n  });\n\n    return (    \n        <IconButton color=\"inherit\" component={Link} to='/new/EventFeed'>\n            { \n                loading ? (\n                    <Badge color=\"secondary\" badgeContent={0}>\n                        <CircularProgress size={20} thickness={4} />\n                    </Badge>\n                ) : \n                \n                (\n                    error ? (\n                        <Badge color=\"secondary\" badgeContent={0}>\n                            <ErrorIcon />\n                        </Badge>\n                    ) : (\n                        <Badge color=\"secondary\" badgeContent={data.operationeventlog_aggregate.aggregate.count}>\n                            <MailIcon />\n                        </Badge>\n                    )\n                )\n                \n            }\n            \n        </IconButton>\n    );\n}\n\n","import React, {useEffect} from 'react';\nimport {gql, useSubscription} from '@apollo/client';\nimport { useSnackbar } from 'notistack';\nimport { meState } from '../cache';\nimport { useReactiveVar } from '@apollo/client';\n\n//fromNow must be in ISO format for hasura/postgres stuff\n//new Date().toISOString() will do it\nconst subscribe_payloads = gql`\nsubscription EventFeedNotificationSubscription($fromNow: timestamp!) {\n  operationeventlog(limit: 1, where: {deleted: {_eq: false}, timestamp: {_gte: $fromNow}}, order_by: {timestamp: desc}) {\n    operator {\n        username\n    }\n    message\n    level\n    resolved\n  }\n}\n `;\n\nexport function EventFeedNotifications(props) {\n    const { enqueueSnackbar } = useSnackbar();\n    const [fromNow, setFromNow] = React.useState(null);\n    const me = useReactiveVar(meState);\n    const { loading, error, data } = useSubscription(subscribe_payloads, {variables: {fromNow}});\n    useEffect( () => {\n        setFromNow(new Date().toISOString());\n    }, []);\n    useEffect( () => {\n        console.log(data, loading, error);\n        if(!loading && !error && data && data.operationeventlog.length > 0){\n            if(data.operationeventlog[0].operator && me.user.username !== data.operationeventlog[0].operator.username){\n                const message = data.operationeventlog[0].operator.username + \":\" + data.operationaleventlog[0].message;\n                enqueueSnackbar(message, {variant: data.operationeventlog[0].level, autoHideDuration: 5000});\n            }else if(!data.operationeventlog[0].operator){\n                enqueueSnackbar(data.operationeventlog[0].message, {variant: data.operationeventlog[0].level, autoHideDuration: 5000});\n            }\n        }else if(error){\n            console.log(error);\n            enqueueSnackbar(\"Mythic encountered an error getting operational event stream\", {variant: \"error\"});\n        }\n    }, [loading, data, enqueueSnackbar, error]);\n    return (    \n       null\n    );\n}\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Menu from '@material-ui/core/Menu';\nimport { Link } from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport { useReactiveVar } from '@apollo/client';\nimport { meState, menuOpen } from '../cache';\nimport Switch from '@material-ui/core/Switch';\nimport { TopAppBarNotifications } from './TopAppBarNotifications';\nimport { EventFeedNotifications } from './EventFeedNotifications';\nimport {Redirect} from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    position: \"sticky\",\n    top: \"0\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    maxWidth: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  mythicElement: {}\n}));\n\nexport function TopAppBar(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const settingsRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(false);\n  const me = useReactiveVar(meState);\n  const isOpen = useReactiveVar(menuOpen);\n\n  const handleDrawerOpen = () => {\n    menuOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    menuOpen(false);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(true);\n  };\n\n  const handleClose = (evt) => {\n    setAnchorEl(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\" className={clsx(classes.appBar, {[classes.appBarShift]: isOpen,})}>\n        \n        { me.loggedIn ? (\n        <Toolbar variant=\"dense\" position=\"sticky static\">\n            <IconButton edge=\"start\" className={clsx(classes.menuButton, isOpen && classes.hide)} color=\"inherit\" aria-label=\"menu\" onClick={handleDrawerOpen}>\n                <MenuIcon />\n            </IconButton>\n            <div>\n                { me.user ? me.user.username : <Redirect to='/new/logout'/>}\n                <TopAppBarNotifications />\n                <EventFeedNotifications />\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    ref={settingsRef}\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <Menu\n                    id=\"menu-appbar\"\n                    nodeRef={settingsRef}\n                    anchorEl={()=>settingsRef.current}\n                    anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    getContentAnchorEl={null}\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    open={anchorEl}\n                    onClose={handleClose}\n                >\n                    <MenuItem component={Link} to=\"/new/logout\" onClick={handleClose}>Logout</MenuItem>\n                    <MenuItem component={Link} to=\"/new/settings\" onClick={handleClose} name=\"settings\">My account</MenuItem>\n                </Menu>\n                \n            </div>\n        </Toolbar>\n          ) : null\n        } \n      </AppBar>\n      <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={isOpen}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon className=\"mythicElement\"/> : <ChevronRightIcon className=\"mythicElement\"/>}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n            <ListItem button component={Link} to='/new' key={\"home\"}>\n              <ListItemIcon><InboxIcon className=\"mythicElement\"/></ListItemIcon>\n              <ListItemText primary={\"Home\"} />\n            </ListItem>\n        </List>\n        <Divider />\n            <List>\n                <ListItem button component={Link} to='/new/payloadtypes' key={\"payloadtypes\"}>\n                  <ListItemIcon><InboxIcon className=\"mythicElement\"/></ListItemIcon>\n                  <ListItemText primary={\"Payload Types\"} />\n                </ListItem>\n                <ListItem button component={Link} to='/new/c2profiles' key={\"c2profiles\"}>\n                  <ListItemIcon><InboxIcon className=\"mythicElement\"/></ListItemIcon>\n                  <ListItemText primary={\"C2 Profiles\"} />\n                </ListItem>\n                <ListItem button component={Link} to='/new/createpayload' key={\"createpayload\"}>\n                  <ListItemIcon><InboxIcon className=\"mythicElement\"/></ListItemIcon>\n                  <ListItemText primary={\"Create Payload\"} />\n                </ListItem>\n            </List>\n        <Divider />\n            <List>\n                <ListItem button component={Link} to='/new/payloads' key={\"payloads\"}>\n                  <ListItemIcon><InboxIcon className=\"mythicElement\"/></ListItemIcon>\n                  <ListItemText primary={\"View Payloads\"} />\n                </ListItem>\n                <ListItem button component={Link} to='/new/callbacks' key={\"callbacks\"}>\n                  <ListItemIcon><InboxIcon className=\"mythicElement\"/></ListItemIcon>\n                  <ListItemText primary={\"Active Callbacks\"} />\n                </ListItem>\n            </List>\n        <ListItem>\n        <Switch\n            checked={props.theme === 'dark'}\n            onChange={props.toggleTheme}\n            color=\"primary\"\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n            name=\"darkMode\"\n          />\n        <div style={{display: \"inline-block\"}}> Enable Dark Mode </div>\n        </ListItem>\n      </Drawer>\n    </div>\n  );\n}\n\n","import { createGlobalStyle} from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\nbody {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\n}\ntable, td, .mythicElement, .MuiDrawer-paper, .MuiDialog-paper, .MuiDialogContentText-root, input, .MuiList-root, .MuiFormHelperText-root {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text} !important;\n}\n.MuiTypography-colorTextPrimary{\n     color: ${({ theme }) => theme.text} !important;\n}\n.MuiTypography-colorTextSecondary{\n    color: ${({ theme }) => theme.textDarker} !important;\n}\n.MuiStepper-root, .MuiStepLabel-label{\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text} !important;\n}\n.MuiList-root{\n    background: ${({ theme }) => theme.listItemBackground};\n    color: ${({ theme }) => theme.text} !important;\n}\n.MuiInputBase-root{\n    background: ${({ theme }) => theme.tableHeader};\n    color: ${({ theme }) => theme.text} !important;\n}\n.MuiDialogContent-dividers{\n    border-top: 1px solid ${({ theme }) => theme.text};\n    border-bottom: 1px solid ${({ theme }) => theme.text};\n}\n.MuiAccordionSummary-root{\n    background: ${({ theme }) => theme.taskAccordian};\n    color: ${({ theme }) => theme.text} !important;\n}\n.MuiAccordionDetails-root{\n    background: ${({ theme }) => theme.taskAccordianResponse};\n    color: ${({ theme }) => theme.text} !important;\n    padding-bottom: 0;\n    padding-top: 0;\n}\n.MuiAccordionActions-root{\n    background: ${({ theme }) => theme.taskAccordianBottom};\n    color: ${({ theme }) => theme.text} !important;\n}\n.MuiAccordionSummary-content.Mui-expanded{\n    margin: 0px 0px 0px 0px !important;\n    min-height: unset;\n}\n.MuiAccordionSummary-root.Mui-expanded{\n    min-height: unset;\n}\n[class*=\"makeStyles-secondaryHeading-\"]{\n    color: ${({ theme }) => theme.secondaryTextColor} !important;\n}\n.MuiTabs-root{\n    background: ${({ theme }) => theme.tabHeaderBackground};\n    color: ${({ theme }) => theme.tabHeaderText} !important;\n}\n// placeholder/helper text for input boxes\n.MuiFormLabel-root {\n    background: transparent;\n    color: ${({ theme }) => theme.text} !important;\n}\n.MuiFormControl-root{\n    border-color: 'white';\n}\n.MuiTableCell-head {\n    background-color: ${({ theme }) => theme.tableHeader};\n    color: ${({ theme }) => theme.text} !important;\n    font-weight: bold;\n}\n.MuiSelect-select.MuiSelect-select{\n    padding-left: 10px\n}\n.MuiToolbar-root {\n    background-color: ${({ theme }) => theme.topAppBar};\n}\n.MuiSelect-select:not([multiple]) option, .MuiSelect-select:not([multiple]) optgroup {\n    background-color: ${({ theme }) => theme.body};\n}\n.MuiCard-root {\n    background-color: ${({ theme }) => theme.tableHeader};\n    color: ${({ theme }) => theme.text} !important;\n}\n.MuiButton-textPrimary, .MuiSwitch-colorPrimary.Mui-checked{\n    color: ${({ theme }) => theme.primaryButtonTextOnly} !important;\n}\n.MuiButton-containedPrimary{\n    background-color: ${({ theme }) => theme.primaryButtonTextOnly} !important;\n}\n.MuiButton-textSecondary, .MuiSwitch-colorSecondary.Mui-checked{\n    color: ${({ theme }) => theme.secondaryButtonTextOnly} !important;\n}\n.MuiButton-containedSecondary{\n    background-color: ${({ theme }) => theme.secondaryButtonTextOnly} !important;\n}\n.MuiMenuItem-root, .MuiMenu-list, .MuiList-root{\n    background: ${({ theme }) => theme.menuItemBackground};\n    color: ${({ theme }) => theme.text} !important;\n}\n.MuiAutocomplete-paper{\n    background-color: ${({ theme }) => theme.menuItemBackground};\n    color: ${({ theme }) => theme.text} !important;\n}\n`\n\n\n//.MuiAppBar-root is top bar\n//.MuiDialog-container is the darkened area when a dialog is up\n","export const lightTheme = {\n    body: '#FFF',\n    text: '#363537',\n    textLighter: '#B8B8B8',\n    textDarker: '#B8B8B8',\n    toggleBorder: '#FFF',\n    background: '#363537',\n    tableHeader: '#F5F5F5',\n    listItemBackground: '#F5F5F5',\n    //primaryButtonTextOnly: \"red\"\n    errorColor: \"#ea7575\",\n    successColor: \"#37a340\",\n    menuItemBackground: \"#FBFBFB\",\n    topAppBar: \"\",\n    taskAccordian: \"\",\n    taskAccordianResponse: \"#FAFAFA\",\n    taskAccordianBottom: \"#F5F5F5\",\n    secondaryTextColor: \"\",\n    tabHeaderBackground: \"\",\n    tabHeaderText: \"\"\n}\nexport const darkTheme = {\n    body: '#363537',\n    text: 'white',\n    textLighter: '#989898',\n    textDarker: '#989898',\n    toggleBorder: '#6B8096',\n    background: '#999',\n    tableHeader: '#484848',\n    listItemBackground: '#484848',\n    primaryButtonTextOnly: \"#7e75ea\",\n    secondaryButtonTextOnly: \"#ea7575\",\n    errorColor: \"#B71C1C\",\n    successColor: \"#37a340\",\n    menuItemBackground: \"#4B515D\",\n    topAppBar: \"\",\n    taskAccordian: \"#424242\",\n    taskAccordianResponse: \"#616161\",\n    taskAccordianBottom: \"#424242\",\n    secondaryTextColor: \"#E0E0E0\",\n    tabHeaderBackground: \"#363537\",\n    tabHeaderText: \"white\"\n}\n\n\n","import React from 'react';\nimport {TaskDisplay} from '../Callbacks/TaskDisplay';\nimport {useQuery, gql } from '@apollo/client';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport  {useParams} from \"react-router-dom\";\n\nconst getTaskQuery = gql`\nquery getTaskQuery($task_id: Int!) {\n  task(where: {id: {_eq: $task_id}}) {\n        comment\n        commentOperator{\n            username\n        }\n        completed\n        id\n        operator{\n            username\n        }\n        original_params\n        status\n        timestamp\n        command {\n          cmd\n        }\n        responses{\n            id\n        }\n    }\n}`;\n\nexport function SingleTaskView(props){\n    const {taskId} = useParams();\n   const {loading, error, data} = useQuery(getTaskQuery, {\n    variables: {task_id: parseInt(taskId)},\n    onCompleted: completedData => {\n        console.log(completedData);\n    }\n   });\n    if (loading) {\n     return <LinearProgress />;\n    }\n    if (error) {\n     console.error(error);\n     return <div>Error!</div>;\n    }\n  return (\n    <div style={{marginTop: \"10px\"}}>\n        <TaskDisplay task={data.task[0]} />\n    </div>\n  );\n}\n//\n","import '../css/App.css';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LoginForm } from './pages/Login/LoginForm';\nimport { Settings } from './pages/Settings/Settings';\nimport { Logout } from './pages/Logout/Logout';\nimport { PayloadTypes } from './pages/PayloadTypes/PayloadTypes';\nimport { CreatePayload } from './pages/CreatePayload/CreatePayload';\nimport { EventFeed } from './pages/EventFeed/EventFeed';\nimport { Payloads } from './pages/Payloads/Payloads';\nimport { Home } from './pages/Home/Home';\nimport { LoggedInRoute } from './utilities/LoggedInRoute';\nimport { C2Profiles } from './pages/C2Profiles/C2Profiles';\nimport { Callbacks } from './pages/Callbacks/Callbacks';\nimport React from 'react';\nimport { TopAppBar } from './TopAppBar';\nimport { useReactiveVar } from '@apollo/client';\nimport { menuOpen } from '../cache';\nimport {ThemeProvider} from \"styled-components\";\nimport { GlobalStyles } from \"../themes/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"../themes/Themes\";\nimport  {useDarkMode} from \"./utilities/useDarkMode\";\nimport { SnackbarProvider } from 'notistack';\nimport {SingleTaskView} from './pages/SingleTaskView/SingleTaskView';\n\n//background-color: #282c34;\nimport {\n    Route,\n    Switch,\n} from 'react-router-dom'\n\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        maxWidth: \"calc(98vw)\",\n        maxHeight: \"calc(98vh)\",\n        overflow: \"auto\",\n        padding: \"0px 0 0px 16px\"\n      },\n      contentShift: {\n        maxWidth: `calc(97vw - ${drawerWidth}px)`,\n        marginLeft: `${drawerWidth}px`,\n        overflow: \"auto\",\n        padding: \"0 0 0 16px\"\n      }\n  }));\n  \nconst drawerWidth = 240;\n\nexport function App(props) {\n    const classes = useStyles();\n    const [themeMode, themeToggler] = useDarkMode();\n    const isOpen = useReactiveVar(menuOpen);\n    return (\n        <ThemeProvider theme={themeMode === 'dark' ? darkTheme : lightTheme}>\n            <GlobalStyles/>\n            <SnackbarProvider maxSnack={5} anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}>\n                <div className=\"App\">\n                    <TopAppBar theme={themeMode} toggleTheme={themeToggler} />\n                    <div className={clsx(classes.content, {[classes.contentShift]: isOpen,})}>\n                        <Switch>\n                            <LoggedInRoute exact path='/new' component={Home} />\n                            <Route exact path='/new/login' component={LoginForm} /> \n                            <LoggedInRoute exact path='/new/settings' component={Settings} />\n                            <LoggedInRoute exact path='/new/payloadtypes' component={PayloadTypes} />\n                            <LoggedInRoute exact path='/new/eventfeed' component={EventFeed} />\n                            <LoggedInRoute exact path='/new/createpayload' component={CreatePayload} />\n                            <LoggedInRoute exact path='/new/payloads' component={Payloads} />\n                            <LoggedInRoute exact path='/new/c2profiles' component={C2Profiles} />\n                            <LoggedInRoute exact path='/new/callbacks' component={Callbacks} />\n                            <LoggedInRoute exact path='/new/task/:taskId' component={SingleTaskView} />\n                            <Route exact path='/new/logout' component={Logout} />\n                        </Switch>\n                    </div>\n                </div>\n            </SnackbarProvider>\n        </ThemeProvider>\n    );\n\n}\n\n","import { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState('light');\n    const [mountedComponent, setMountedComponent] = useState(false)\n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    };\n\n    const themeToggler = () => {\n        theme === 'light' ? setMode('dark') : setMode('light')\n    };\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme ? setTheme(localTheme) : setMode('light')\n        setMountedComponent(true)\n    }, []);\n\n    return [theme, themeToggler, mountedComponent]\n};\n","function HTTPPost(url, data) {\n      const requestOptions = {\n            method: \"POST\",\n            headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('access_token'),\n            },\n            body: JSON.stringify(data)\n        };\n        return fetch(url, requestOptions);\n}\n\nexport default HTTPPost;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport { App } from './components/App';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport { ApolloProvider, ApolloClient, InMemoryCache, from, split, HttpLink } from '@apollo/client';\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { meState, successfulRefresh } from './cache';\nimport { onError } from \"@apollo/client/link/error\";\nimport { RetryLink } from \"@apollo/client/link/retry\";\nimport HTTPPost from './components/utilities/HTTPPost';\nimport { getMainDefinition } from '@apollo/client/utilities'\nimport { setContext } from '@apollo/client/link/context';\n\nconst cache = new InMemoryCache({\n    typePolicies: {\n        Query: {\n            fields: {\n                \"Subscription.operationeventlog\": {\n                    merge(existing, incoming){\n                        return incoming;\n                    }\n                }\n            }\n        }\n    }\n});\n\nif (localStorage.getItem(\"access_token\") !== null){\n    meState({\n        loggedIn: true,\n        access_token: localStorage.getItem(\"access_token\"),\n        refresh_token: localStorage.getItem(\"refresh_token\"),\n        user: JSON.parse(localStorage.getItem(\"user\"))\n    });\n}else{\n    meState({loggedIn: false});\n}\nconst retryLink = new RetryLink({\n  delay: {\n    initial: 20,\n    max: 300,\n    jitter: true\n  },\n  attempts: {\n    max: 10,\n    retryIf: (error, _operation) => !!error\n  }\n});\nconst httpLink = new HttpLink({\n    uri: window.location.origin + \"/graphql/\",\n    options: {\n        reconnect: true,   \n        connectionParams: {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`\n          }\n       }     \n    }\n});\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('access_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\nconst errorLink = onError(({ graphQLErrors, networkError, operation, forward }) => {\n  console.log(\"errors?\");\n  if (graphQLErrors) {\n    console.log(\"[graphQLError]\", graphQLErrors);\n    for (let err of graphQLErrors) {\n      switch (err.extensions.code) {\n        case 'access-denied':\n        case 'start-failed':\n          // when AuthenticationError thrown in resolver\n            console.log(\"got start-failed error\");\n          // modify the operation context with a new token\n          const oldHeaders = operation.getContext().headers;\n          if(GetNewToken()){\n            operation.setContext({\n                headers: {\n                  ...oldHeaders,\n                 authorization: localStorage.getItem(\"access_token\"),\n                },\n              });\n              // retry the request, returning the new observable\n              return forward(operation);\n          }else{\n            window.location.reload();\n          }\n        default:\n            console.log(err);\n      }\n    }\n  }\n  if (networkError) {\n    console.log(\"[Network error]\", networkError);\n    switch (networkError.extensions.code) {\n        case 'access-denied':\n        case 'start-failed':\n          // when AuthenticationError thrown in resolver\n            console.log(\"got start-failed error\");\n          // modify the operation context with a new token\n          const oldHeaders = operation.getContext().headers;\n          if(GetNewToken()){\n            operation.setContext({\n                headers: {\n                  ...oldHeaders,\n                 authorization: localStorage.getItem(\"access_token\"),\n                },\n              });\n              // retry the request, returning the new observable\n              return forward(operation);\n          }else{\n            window.location.reload();\n          }\n          \n        default:\n            console.log(networkError);\n      }\n  }\n  \n});\n\nconst GetNewToken = () =>{\n    const response = HTTPPost('/refresh', {\"refresh_token\": localStorage.getItem(\"refresh_token\")}).then((response) => {\n            response.json().then(data => {\n                console.log(data)\n                if(\"access_token\" in data){\n                    successfulRefresh(data);\n                    console.log(\"successfully got new access_token\");\n                    return true;\n                }else{\n                    localStorage.removeItem(\"access_token\");\n                    localStorage.removeItem(\"refresh_token\");\n                    localStorage.removeItem(\"user\");\n                    console.log(\"failed to get new access_token\", data);\n                    return false;\n                }\n            }).catch(error => {\n                console.log(\"Error trying to get json response in GetNewToken\", error.toString());\n                return false;\n            });\n        }).catch(error => {\n            console.log(\"There was an error in GetNewToken!\", error.toString());\n            return false;\n        });\n}\nconst websocketAddress =() =>{\n    return window.location.protocol === \"https:\" ? \"wss://\" + window.location.host + \"/graphql/\" : \"ws://\" + window.location.host + \"/graphql/\";\n}\n\nconst websocketLink = new WebSocketLink({\n     uri: websocketAddress(),\n     options: {\n       reconnect: true,\n       connectionParams: {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('access_token')}`\n          }\n       }\n     }\n    });\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query)\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    )\n  },\n  websocketLink,\n  authLink.concat(httpLink)\n)\nconst apolloClient = new ApolloClient({\n   link: from([errorLink, retryLink, splitLink]),\n    cache\n  });\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={apolloClient}>\n    <Router>\n        <App key=\"App\" />\n    </Router>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}